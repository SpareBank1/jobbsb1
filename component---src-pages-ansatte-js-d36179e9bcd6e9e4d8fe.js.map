{"version":3,"sources":["webpack:///./src/pages/ansatte.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","EmplyeesPage","_ref","data","a","createElement","title","allMarkdownRemark","edges","map","post","key","node","id","className","frontmatter","date","to","path","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KA2BeI,EAAS,YAgBTO,UApCM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACjBP,EAAAQ,EAAAC,cAACN,EAAA,EAAD,KACIH,EAAAQ,EAAAC,cAACL,EAAA,EAAD,CAAKM,MAAM,wBACbV,EAAAQ,EAAAC,cAAA,0BACCF,EAAKI,kBAAkBC,MAAMC,IAAI,SAAAC,GAAI,OACpCd,EAAAQ,EAAAC,cAAA,OAAKM,IAAKD,EAAKE,KAAKC,IAClBjB,EAAAQ,EAAAC,cAAA,MAAIS,UAAU,UAAUJ,EAAKE,KAAKG,YAAYT,OAC9CV,EAAAQ,EAAAC,cAAA,aACGK,EAAKE,KAAKG,YAAYC,MAEzBpB,EAAAQ,EAAAC,cAAA,WACAT,EAAAQ,EAAAC,cAACP,EAAA,KAAD,CAAMmB,GAAIP,EAAKE,KAAKG,YAAYG,KAAMJ,UAAU,iBAAhD,UAAwEJ,EAAKE,KAAKG,YAAYT,OAC9FV,EAAAQ,EAAAC,cAAA,cAGJT,EAAAQ,EAAAC,cAAA,WACAT,EAAAQ,EAAAC,cAACP,EAAA,KAAD,CAAMmB,GAAG,KAAT,uIClBN,SAASE,EAATjB,GAA2D,IAA5CkB,EAA4ClB,EAA5CkB,YAAaC,EAA+BnB,EAA/BmB,KAAMC,EAAyBpB,EAAzBoB,KAAMC,EAAmBrB,EAAnBqB,SAAUjB,EAASJ,EAATI,MAChD,OACEkB,EAAApB,EAAAC,cAACoB,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAzB,GACN,IAAM0B,EACJT,GAAejB,EAAK2B,KAAKC,aAAaX,YACxC,OACEI,EAAApB,EAAAC,cAAC2B,EAAA5B,EAAD,CACE6B,eAAgB,CACdZ,QAEFf,MAAOA,EACP4B,cAAa,QAAU/B,EAAK2B,KAAKC,aAAazB,MAC9CgB,KAAM,CACJ,CACEa,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS9B,GAEX,CACE+B,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASjC,EAAK2B,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAAS9B,GAEX,CACE6B,KAAI,sBACJC,QAASP,IAGVU,OACChB,EAASiB,OAAS,EACd,CACEL,KAAI,WACJC,QAASb,EAASkB,KAAT,OAEX,IAELF,OAAOjB,MAtDlBnB,KAAAuC,IA8DJvB,EAAIwB,aAAe,CACjBtB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIyB,UAAY,CACdxB,YAAayB,IAAUC,OACvBzB,KAAMwB,IAAUC,OAChBxB,KAAMuB,IAAUE,MAChBxB,SAAUsB,IAAUG,QAAQH,IAAUC,QACtCxC,MAAOuC,IAAUC,OAAOG,YAGX9B,MAEf,IAAMQ,EAAY","file":"component---src-pages-ansatte-js-d36179e9bcd6e9e4d8fe.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\n\nconst EmplyeesPage = ({ data }) => (\n    <Layout>\n        <SEO title=\"Sparebank 1 ansatte\" />\n      <h1>VÃ¥re ansatte</h1>\n      {data.allMarkdownRemark.edges.map(post => (\n        <div key={post.node.id}>\n          <h3 className=\"ffe-h3\">{post.node.frontmatter.title}</h3>\n          <small>\n            {post.node.frontmatter.date}\n          </small>\n          <br />    \n          <Link to={post.node.frontmatter.path} className=\"ffe-link-text\">Les om {post.node.frontmatter.title}</Link>\n          <hr />\n        </div>\n      ))}\n      <br />\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n\n  export const pageQuery = graphql`\n  query BlogIndexQuery {\n    allMarkdownRemark{\n      edges{\n        node{\n          frontmatter{\n            path\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n  `\n\nexport default EmplyeesPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `no`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}