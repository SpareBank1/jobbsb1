{"version":3,"sources":["webpack:///./src/templates/pageTemplate.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","keywords","className","date","dangerouslySetInnerHTML","__html"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAKe,SAASI,EAATO,GAEZ,IACOC,EADPD,EADDE,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACER,EAAAS,EAAAC,cAACR,EAAA,EAAD,KACIF,EAAAS,EAAAC,cAACP,EAAA,EAAD,CAAKQ,MAAOJ,EAAYI,MAAOC,SAAU,6DACzCZ,EAAAS,EAAAC,cAAA,OAAKG,UAAU,aACfb,EAAAS,EAAAC,cAAA,OAAKG,UAAU,QACXb,EAAAS,EAAAC,cAAA,UAAKH,EAAYI,OACjBX,EAAAS,EAAAC,cAAA,UAAKH,EAAYO,MACjBd,EAAAS,EAAAC,cAAA,OACAG,UAAU,UACVE,wBAAyB,CAAEC,OAAQR,QAQxC,IAAMV,EAAS","file":"component---src-templates-page-template-js-76a117e250f0cc27a8c0.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n        <SEO title={frontmatter.title} keywords={[`sparebank 1`, `karriere`, `stilling`, `utvikling`, `design`]} />\n        <div className=\"container\">\n        <div className=\"post\">\n            <h1>{frontmatter.title}</h1>\n            <h2>{frontmatter.date}</h2>\n            <div\n            className=\"content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n            />\n        </div>\n        </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}