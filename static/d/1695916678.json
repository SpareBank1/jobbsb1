{"data":{"allFeedsb1Digital":{"edges":[{"node":{"title":"Start smart med premortem","link":"https://medium.com/sparebank1-digital/start-smart-med-premortem-3d57636d1237?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Etter å ha gjennomført over 80 <a href=\"https://medium.com/sparebank1-digital/hendelsedrevet-l%C3%A6ring-i-sparebank-1-ba50d96130c1\">post mortemer</a> siden 2017 sitter <a href=\"https://sparebank1.dev/\">SpareBank 1 Utvikling</a> igjen med store mengder verdifull læring, og en trygg arena for å ta frem innsikt sammen etter feil og hendelser. Under arbeidet med post mortem ble vi etterhvert også kjent med en beslektet metode - premortem. Formålet med premortem er å skape læring og forbedring <em>uten</em> at noe har gått galt. En besnærende tanke, men hvordan er det egentlig mulig?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/460/0*VCx6rrhmxDMd2cpK\" /><figcaption>Bilde: <a href=\"https://www.theguardian.com/lifeandstyle/2014/may/10/hindsight-in-advance-premortem-this-column-change-life\">www.theguardian.com</a></figcaption></figure><h4>Hva er premortem?</h4><p>I Harvard Business Review-artikkelen <a href=\"https://hbr.org/2007/09/performing-a-project-premortem\">“Performing a Project Premortem”</a> fra 2007 beskriver <a href=\"https://en.wikipedia.org/wiki/Gary_A._Klein\">Gary Klein</a> en metode for å øke muligheten for at prosjekter lykkes. Ved å gjennomføre premortem i starten av prosjektet, eller før viktige beslutninger skal tas, søkes forbedring mens det fortsatt gjenstår tid og rom for endring. En slik tilnærming fremstår langt mer attraktiv enn alternativet der post mortem utføres etter at prosjektet har gått galt.</p><p>I en premortem forflytter teamet seg mentalt frem i tid til et sted der prosjektet eller organisasjonen har mislykkes. Deretter ser man seg tilbake for å identifisere hva som kunne føre til at det gikk dårlig. Hovedoppgaven til teammedlemmene er å ta frem sannsynlige grunner til at man har feilet og reflektere over funnene.</p><p>Kort beskrevet inneholder premortem følgende:</p><ul><li>Teamlederen tar med seg teamet et år frem i tid og informerer om at prosjektet på dette tidspunktet har feilet spektakulært.</li><li>Teammedlemmene ser seg tilbake og skriver hver for seg ned årsaker til at det gikk så galt.</li><li>Resultatene deles med gruppen ved at et og et notat leses opp av forfatteren. Når den første årsaken er presentert leser nestemann opp en ny. Slik går runden videre i gruppen helt til alle punktene er dokumentert.</li><li>Teamet reflekterer over innspillene mtp. hvordan man kan styrke sin plan.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8MPh3QZd3GXQVcxweXiVtA.jpeg\" /><figcaption>Diskusjon om mulige grunner til at rekruttering av utviklere gikk galt i 2020.</figcaption></figure><h4>Hvorfor er premortem en god ide?</h4><p>Gary Klein viser til at effekten av “prospective hindsight” i premortem er betydelig høyere enn det tradisjonelle spørsmålet “Hva kan gå galt?” ved starten av et prosjekt.</p><blockquote>“Research conducted in 1989 by Deborah J. Mitchell, of the Wharton School; Jay Russo, of Cornell; and Nancy Pennington, of the University of Colorado, found that prospective hindsight — imagining that an event has already occurred — increases the ability to correctly identify reasons for future outcomes by 30%.“</blockquote><blockquote>— Gary Klein</blockquote><p>Videre peker Klein på at premortem kan <a href=\"http://idl.iscram.org/files/veinott/2010/1049_Veinott_etal2010.pdf\">bidra til å redusere effekten av overmot </a>ved starten av prosjekter. Teknikken skaper også trygge rammer for å kunne løfte frem og diskutere problemer. Ved at metoden belønner vanskelige innspill, bygger man kultur for å prate om utfordringer.</p><p>Psykolog og nobelprisvinner i økonomi Daniel Kahneman omtaler premortem i sin anerkjente bok “<a href=\"https://www.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman/dp/0374533555\">Thinking, Fast and Slow</a>”. Her er <a href=\"https://www.youtube.com/watch?v=MzTNMalfyhM\">lenke til en kort video</a> hvor Kahneman beskriver metodens positive effekter.</p><blockquote>“What the premortem technique does, which I think is beautiful, is that it legitimizes dissent. Actually, it turns things around. It rewards people for being imaginative in finding flaws in the current plan.”</blockquote><blockquote>— Daniel Kahneman</blockquote><h4>Tid for eksperiment</h4><p>På slutten av 2019 grep vi sjansen til å teste ut metoden ifbm. satsing på et nytt produktområde. Erfaringen fra første premortem var positiv, der teamets refleksjon skapte innsikt med betydelig verdi for deres videre arbeid. De positive erfaringene gav mersmak, og vi har nå prøvd ut premortem på følgende områder:</p><ul><li>Partneres bruk av SpareBank 1 sin finansplattform</li><li>Rekruttering av utviklere</li><li>Organisering av utviklingsteam med økt ansvar</li><li>Covid-19 situasjonen (remote sesjon)</li></ul><h4>Vår gjennomføring</h4><p>I premortemene som er utført til nå har det vært gunstig med en eller to dedikerte personer til å fasilitere sesjonen. Psykologisk trygghet er et viktig premiss for arbeidet som skal finne sted. Tydelig fokus på “blaimfree” dialog med trygge rammer vil være sentralt for en vellykket gjennomføring. Vi har derfor innledet hver premortem med en introduksjon av selve konseptet, inkludert viktigheten av å følge anbefalte retningslinjer. Ut over introduksjonen har det ikke vært behov for at teammedlemmene har forberedt seg særskilt til et premortem.</p><p>For oss har det viktigste forarbeidet vist seg å være konstruksjonen av caset som har feilet spektakulært. En sterk historie som fremføres med innlevelse og troverdighet er utgangspunktet for å skape engasjement i gruppen. Både kreativitet og fremføring har så langt vært imponerende.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*yfa8QNdLvD8Yqg_6VXaavA.jpeg\" /><figcaption>Teamet skriver ned grunner til at det gikk galt.</figcaption></figure><p>Etter at teamet er tatt med frem i tid, og informert om at man har feilet stort, er det dags for å reflektere. I denne delen av premortem har teamet sett seg tilbake og notert hver for seg årsaker til at utfallet ble negativt. Resultatene er så blitt delt i gruppen ved at et og et notat presenteres av skribenten. Årsaken henges deretter opp på veggen etter eventuelle spørsmål og kommentarer. Med første notat ferdig presentert leser nestemann opp en ny lapp. Runden blir avsluttet når alle årsakene er presentert og klistret på veggen.</p><p>Med gjennomgang av mulige feilkilder sluttført var neste steg å velge ut hva man skulle fokusere på med resterende tilgjengelige tid. Deltagerne grupperte da først sammenfallende punkter og stemte så frem årsakene som var mest interessante å drøfte dypere mtp. rotårsaker og mulige tiltak. Prioriteringen ble gjort vha.“<a href=\"https://en.wikipedia.org/wiki/Dot-voting\">dot-voting</a>”.</p><p>Når arbeidsmøtet er ferdig og deltagerne har mottatt velfortjent takk for bidrag og innsats gjenstår noe etterarbeid. Dette består i at innspillene oppsummeres og deles med teamet, samt deles med andre som kan ha nytte av resultatet. Noen punkter krever ytterligere refleksjon og analyse, mens andre allerede har resultert i konkrete tiltak.</p><h4>Kan premortem bli for negativt?</h4><p>Et punkt vi var nysgjerrige på var om det kan bli for mye negativt fokus i en premortem? Daniel Kahneman trekker frem en bekymring han har registrert ifbm. at organisasjoner har et grunnleggende ønske om optimisme. Her fryktes handlingslammelse hvis man blir kjent med reell kostnad og risiko, som et resultat av at man kvier seg for initiativ som blir utfordrende. Kahnemans svar til dette er at balansepunktet mellom realisme og optimisme er en reell diskusjon. Samtidig argumenterer han for at å kjenne til feilkilder uansett er nyttig. Vi har så langt ikke opplevd utfordringer knyttet til at fokus på risikopunkter skaper negativ stemning eller frykt for handling. Inntrykket har tvert i mot vært at det skapes energi og et sterkt ønske om tiltak for å forbedre situasjonen.</p><h4>Tilbakemeldinger fra deltagere</h4><p>Et tydelig mønster i tilbakemeldingene etter våre premortemer er at det er positivt å jobbe med problemer før de oppstår. Deltagerne synes det er nyttig å være pro-aktive og reflektere over hva som er viktig. I tillegg liker man selve formatet, der lettbent og enkel gjennomføring skaper en positiv måte å diskutere mulige utfordringer på. Samtidig lar strukturen gruppa fokusere på det de selv ønsker uten negativt press eller stress. Videre vurderes premortem som en lærerik øvelse der det kommer frem punkter man ikke har tenkt på før.</p><p>Kan vi risikere at historien som fremføres er for negativ? En av tilbakemeldingene fra deltagerne stilte spørsmålstegn ved om historien som ble fortalt i for stor grad var “worst case”. Dette spørsmålet er det verdt å reflektere over. Selv om våre case til nå ser ut til å ha truffet greit mtp. balanse på alvorlig konsekvens og realisme understreker punktet viktigheten av at materialet som presenteres er godt oppbygd og troverdig presentert.</p><h4>Oppsummering</h4><p>I SpareBank 1 Utvikling er post mortem en god følgesvenn for trygg læring når noe har gått galt. Det har vært lærerikt å teste ut en teknikk som søker å redusere behovet for bruk av post mortem. Erfaringene så langt støtter hypotesen om at premortem kan være en bidragsyter til dette. Gjennom refleksjon og innsikt mens det fortsatt er tid og mulighet for forbedring øker sannsynligheten for at det man jobber med blir vellykket.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3d57636d1237\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/start-smart-med-premortem-3d57636d1237\">Start smart med premortem</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Kristoffer Berg"}},{"node":{"title":"Ikke jobb mens jeg forstyrrer — del to","link":"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-del-to-3b389d1cb71d?source=rss----e3c741b0efee---4","content":{"encoded":"<h3>Ikke jobb mens jeg forstyrrer — del to</h3><p>I <a href=\"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-2a9e14824033\">del en av denne historien</a> fortalte jeg at jeg var på vei til å bli utbrent.</p><p>Kombinasjonen av sterkt leveransepress og hyppige avbrudd var i ferd med å spise oss opp. Hvordan skulle vi klare å levere forbedringer raskt og med høy kvalitet, når vi ble avbrutt hele tiden?</p><p>Gjennom å gjennomføre en <a href=\"https://en.wikipedia.org/wiki/A3_problem_solving\">A3</a> identifiserte vi de viktigste typene avbrudd vi ble utsatt for:</p><ul><li>Møter — både egne og andres</li><li>Elektronisk kommunikasjon — chat, epost, SMS osv</li><li>Selvpåførte konsentrasjonsavbrudd — tankene spinner avgårde, enten på oppgaver en vet en skal gjøre, eller en kommer på nye oppgaver som trengs å gjøres</li><li>Pirk på skulderen og kapring ved kaffeautomaten — “Har du fem minutter?”</li></ul><p><a href=\"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-2a9e14824033\">Del en</a> beskrev hvilke grep vi gjorde for å håndtere møtene.</p><p>Men hva har vi gjort for å få kontroll med resten?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*lKEpieAVxl3JAbOnnU59MQ.jpeg\" /><figcaption>Foto: Getty Images via IStock.</figcaption></figure><h3>Jeg sendte deg akkurat en epost</h3><p>Det er godt mulig. Det vet jeg ikke noe om. For jeg har skrudd av epostklienten. Jeg prøver så godt jeg kan å ha den lukket gjennom dagen. Helst ønsker jeg å sjekke epost om morgenen, etter lunsj, og før jeg går hjem om ettermiddagen. Har du sendt meg en epost på den private epostadressen min, så sjekker jeg den ikke før på kvelden.</p><p>Før hadde vi epostklienten oppe, gjerne med pushvarsling aktivert, hele dagen. Dette var en av årsakene til at vi endte opp i den uholdbare situasjonen vi var kommet i. Det er en befrielse å kunne håndtere eposter på bestemte tider på dagen, heller enn å stadig skulle bli avbrutt av mer eller mindre viktige eposter.</p><p>Ved å håndere epostene på denne måten, får jeg også muligheten til å prioritere arbeidet epostene resulterer i. Når jeg kan se gjennom flere eposter samtidig, kan jeg lettere ta stilling til hvilke som bør følges opp når.</p><p>Kanskje har du ditt eget system for å håndtere oppgavene dine? For meg fungerer det best med en liste i et enkelt tekstdokument hvor jeg kan notere så mye eller lite jeg trenger om det som skal gjøres.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*MBN0WK-3Z6tdeVQ48CIaPQ.jpeg\" /><figcaption>TextEdit oppgavedokumentet mitt ble litt kjedelig, så det ble dette bildet istedet.</figcaption></figure><p>Når en oppgave er gjort, sletter jeg den fra listen min. Det gir en god følelse. Derfor er det lurt å skrive opp også enkle oppgaver som å svare på en epost. Det lille dopaminkicket du får når du har gjort en oppgave og kan slette den fra listen, det har du fortjent.</p><h3>Det rister i buksa</h3><p>Ja, det gjør det. Men det er sjelden. For jeg har skrudd av nesten alle pushvarslene mine. De eneste pushvarslene jeg har igjen er SMS, Facebook Messenger og direktemeldingene på Slack.</p><p>Før hadde jeg pushvarsler med vibrasjonsvarsling på det meste, inkludert Facebook og private epostvarsler. Det var gøy i starten, men etterhvert som jeg ble mer og mer bevisst på hvordan disse avbruddene påvirket meg, var det en befrielse å skru dem av. Jeg har aldri sett meg tilbake.</p><h3>Jeg kom på en ting</h3><p>Det gjør jeg hele tiden. For å få det ut av hodet og jobbe videre med det jeg holder på med, så må jeg legge til en ny linje i oppgavelisten min. Da får jeg også samtidig prioritert oppgaven i forhold til alt det andre som står der som skal gjøres.</p><p>Av og til er det utfordringer som er såpass krevende at føles umulig ikke å tenke på det. Tankene blir trukket mot det hele tiden. Da holder det ikke bare å notere det ned i oppgavelisten. Da må jeg også ta meg tid til å finne ut av når jeg skal jobbe med problemstillingen. Deretter booker jeg et møte i kalenderen med meg selv, slik at jeg vet at jeg har god nok tid til å jobbe grundig med det. Først da klarer hodet slippe taket, og jeg kan jobbe videre med det jeg holder på med.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ilIDzF-Y9Z4oSOj8qXsAqQ.png\" /><figcaption>Det kan være lurt å sette av tid i kalenderen til å jobbe med krevende utfordringer.</figcaption></figure><h3>Så du Slackmeldingen min?</h3><p>Det kommer an på. For jeg har ofte skrudd av Slackklienten også. Er jeg midt inne i noe, så er det ikke sikkert jeg sjekker mobilen, selv om Slackappen gjør et rist.</p><p>Jeg prøver å sjekke Slack samtidig som jeg sjekker epost. Da oppnår jeg den samme fordelen som nevnt over: Jeg kan gå gjennom alle meldingene og epostene samtidig, og lage en prioritert liste over hva som skal håndteres når. Er det trivielt å svare på meldingene, så svarer jeg selvfølgelig på dem med en gang.</p><p>Men hva når noen trenger hjelp med en gang? Er det noen som trenger hjelp eller lurer på noe, så er det som oftest relatert til noe jeg jobber med. Jeg jobber i team. Dermed er det som oftest noen av teammedlemmene som trenger hjelp eller lurer på noe. Da prater vi heldigvis sammen. Det er som oftest alltid mer effektivt enn skriftlig på Slack, og mye hyggeligere.</p><h3>Har du tid til å tenke?</h3><p>Vi som jobber med kunnskapsarbeid, er ansatt for å løse komplekse problemstillinger som ofte aldri er løst før i vår kontekst. Samtidig er det en forventning om at vi skal være tilgjengelig for alle spørsmål, meninger, informasjon og møter i alle kanaler hele tiden. Dette er en situasjon som kan være farlig, og i verste fall føre til utbrenthet og årelange fravær fra arbeidslivet.</p><p>Det lille dopaminkicket vi får for hver eneste Slackmelding, Facebookpost, møteinnkalling eller epost vi mottar, er godt. Følelsen vi får når vi har løst en komplisert oppgave som ofte kommer mange andre til nytte, er bedre.</p><p>For å løse flere av de kompliserte oppgavene, må vi gi oss selv tid og rom til å tenke. Vi løser oppgavene best når vi jobber sammenhengende uten forstyrrelser.</p><p>Ved å ta tilbake kontrollen over tiden min, unngikk jeg trolig å bli utbrent. Jeg håper du også tar tilbake kontrollen over tiden din. Det tror jeg er best for oss alle.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3b389d1cb71d\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-del-to-3b389d1cb71d\">Ikke jobb mens jeg forstyrrer — del to</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Vidar Moe"}},{"node":{"title":"Når hårete mål for rekruttering gruses på deltid","link":"https://medium.com/sparebank1-digital/n%C3%A5r-h%C3%A5rete-m%C3%A5l-for-rekruttering-gruses-p%C3%A5-deltid-52f3d12c0a92?source=rss----e3c741b0efee---4","content":{"encoded":"<p><em>Historien om hvordan SpareBank 1 Utvikling lykkes med felles strekkmål for rekruttering.</em></p><p>Mot slutten av 2018 fikk vi en monumental utfordring: Gode erfaringer med insourcing til utviklingsorganisasjonen over flere år gjorde at <a href=\"https://sparebank1.dev/\">SpareBank 1 Utvikling</a> ønsket å øke satsingen på rekruttering ytterligere for 2019. En god tanke, men ikke en vi var alene om. Markedet vi opererer i er krevende, og konkurransen om de flinke folkene er knallhard — med langt større etterspørsel enn tilbudsside. Særlig er dette tydelig i utviklermarkedet, der vårt behov er størst. Rekrutteringsapparatet vårt gikk allerede for full maskin. Det var ikke enkelt å se for seg hvordan vi skulle lykkes med en ambisiøs oppskalering. Strekkmålet som ble satt for 2019 ble imidlertid oppnådd allerede ila. september måned. For året totalt ble måloppnåelsen hele 138%. Hvordan var dette mulig?</p><h3>Tydelige mål hjalp oss</h3><p>For å hjelpe oss med å holde fokus over tid valgte vi en <a href=\"https://en.wikipedia.org/wiki/OKR\">Objectives and Key Results</a>-tilnærming. Arbeidet med å ta frem mål ble startet tidlig ved å kombinere dialog med ledelsen med input fra de som ville være involvert i rekrutteringen. Vårt <em>objective</em> ble “<em>Leveransekraft i tverrfaglige team med høy andel ansatte utviklere og teamledere</em>”. For å realisere dette kom vi fram til to målbare <em>key results</em>.</p><p>Det første var et strekkmål på hvor mange vi skulle ansette. Tallet var basert på selskapets overordnede mål, kombinert med at hver enkelt personalleder og teamleder ble utfordret på hva de kunne bidra med. Resultatet av denne “top down/bottom-up”-prosessen ble et <em>key result</em> om å ansette 21 personer ila 2019. Ambisjonen var på grensen til å være ubehagelig høy, og betydelig over resultatet for 2018. Det er verdt å merke seg at 2018 hadde vært vårt beste år for rekruttering noensinne. Vi visste rett og slett ikke helt hvordan vi skulle nå det nye målet. Derfor etablerte vi enda et <em>key result</em> som utfordret oss selv til å teste ut minst én ny måte å drive rekruttering på. For eksempel ved å teste ut en ny måte å treffe kandidater på. På denne måten forsøkte vi å sikre et tydelig spor for læring og videreutvikling av rekrutteringsprosessen vår.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/498/0*p4sHVx9p2C9YrIXs\" /></figure><h3>Ambisjonen trigget forbedringer</h3><p>Vårt strekkmål om 21 ansettelser gjorde at måten vi jobbet med rekruttering på måtte forbedres. Vi var nødt til å se nærmere på hele prosessen. På starten av året ble følgende elementer vurdert som sentrale for videreutvikling:</p><ul><li><em>Styrke fokus på hva målgruppen er opptatt av. Her dro vi stor nytte av innsikt og læring fra en rekrutteringsundersøkelse gjennomført av et eksternt firma.</em></li><li><em>Bygge videre på #nofilter-profil i annonser og dialog med kandidater. (#nofilter ble hentet fra en presentasjon av Thimon de Jong under rekrutteringskonferansen “The Hunt” 2018.) En #nofilter-strategi innebærer å være åpen om både styrker og svakheter. Vi økte bl. a. fokuset i stillingsannonsene på utfordringer vi har.</em></li><li><em>Skape engasjement om et felles målbilde. Dette var viktig særlig mtp. at de som står for rekrutteringsarbeidet gjør dette som en “deltidsjobb”, ved siden av det man jobber med i utviklingsteamene til vanlig. Vi var helt avhengige av å skape kraft i en distribuert modell for å skalere godt nok.</em></li><li><em>HR som en integrert del av laget. Nøkkelkompetanse innen HR ble inkludert i organisasjonen, mens den tidligere var plassert lenger unna der rekrutteringsarbeidet foregikk.</em></li><li><em>Være mer synlige i miljøet vi rekrutterer fra. Det ble lagt en konkret plan for hvordan vi skulle løfte oss og bygge kjennskapen til miljøet gjennom deling i artikler, presentasjoner mm.</em></li><li><em>Løpende eksperimenter med hvordan vi rekrutterer. Planen la til grunn et løft av kvaliteten i rekrutteringsarbeidet gjennom kontinuerlig forbedring, bl.a. gjennom å sette spesifikke mål om å teste ut nye måter å rekruttere på.</em></li></ul><h3>Beskjeden start styrket fokuset</h3><p>Året startet tregt. Januar og februar måned kom og gikk uten at det resulterte i signeringer. Stemningen var imidlertid god. Takket være OKR-rytmen med tavlemøter for løpende fokus på både status og nødvendige tiltak styrket pipeline for kandidater seg jevnt og trutt. I mars ga arbeidet tydelig uttelling ved signeringer med hele fire ansatte. Vi var kommet skikkelig i gang, og modellen skulle etterhvert vise seg å fungere meget bra.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*d8mqD742o5kgjk3v\" /><figcaption>Antall signeringer fordelt på måneder i 2019.</figcaption></figure><p>Det var flere faktorer som bidro til denne utviklingen. Innføringen av fagdag hver torsdag for utviklere ble etterhvert mer kjent utenfor huset. Dette kom som et resultat av presentasjoner og erfaringsdeling på forskjellige eksterne arenaer, blogginnlegg skrevet av oss selv, artikler i media, samt tradisjonell “word of mouth”. Dette bidro til at flere kandidater var nysgjerrige på hvordan det var å jobbe i SpareBank 1 Utvikling. Videre var det nyttig for oss å kombinere spesialistannonser med mer generelle stillillingsannonser. Kombinasjonen gjorde at vi var var til stede i markedet stort sett hele tiden, samtidig som de fleste utviklerprofiler fant noe som passet for seg. Tilsiget av kandidater økte merkbart i perioden. Til tross for den beskjedne starten ble det ambisiøse målet oppnådd allerede i september. Det stoppet heller ikke der. Totalt endte vi opp med hele 29 ansettelser innen utgangen av året.</p><h3>Viktige elementer for at vi lykkes</h3><p>På slutten av året gjennomførte vi en retrospektiv for å identifisere styrker og svakheter på rekrutteringsarbeidet. Punktene under ble vurdert som tydelige styrker:</p><ul><li><em>Den distribuerte modellen gjør at mange kan bidra etter eget ønske og kapasitet.</em></li><li><em>Hvem som holder i generelle prosesser går på rundgang. Dette førte til at ingen ble sittende med ansvaret for en stillingsannonse og prosess over for lang tid.</em></li><li><em>Vårt fokus på </em><a href=\"https://medium.com/sparebank1-digital/torsdag-er-den-nye-l%C3%B8rdagen-f547e55aadd3\"><em>faglig utvikling for våre ansatte </em></a><em>begynte å bli kjent utenfor huset.</em></li><li><em>OKR-tilnærmingen hjalp oss å sammen sette et mål og å holde fokus over tid. Den skapte en fast rytme for å snakke om status og behov for tiltak på egne tavlemøter.</em></li><li><em>Bruk av en dedikert flyt-tavle som viste status hver enkelt prosess og kandidat.</em></li><li><em>Egen “OKR-shepherd” for rekruttering som hjalp til med at vi aldri mistet fokus på målet.</em></li><li><em>Datadrevet arbeid basert på kundeinnsikt for målgruppene våre.</em></li><li><em>Tilgjengeliggjøring av praktisk informasjon om rekruttering.</em></li><li><em>Eksperimenter med nye måter å rekruttere på førte til at vi lærte mye, og flere elementer som ble testet ut fungerte så godt at de ble videreført.</em></li><li><em>Strukturert jobbing med sommerjobb åpnet opp et nytt segment for oss i utviklermarkedet.</em></li><li><em>Fokuset på hver enkelt kandidats prosess og opplevelse ble styrket ved at HR kom med på laget. Dette skapte bedre flyt og fart i prosessen.</em></li></ul><h3>Oppsummering</h3><p>Rekruttering hos oss er ikke outsourcet til en egen funksjon. Tvert imot er ekspertene på fagområdene, sammen med sentrale personer i de tverrfaglige teamene, i front — på deltid. Dette gjør at kandidater møter de man vil jobbe sammen med, og som er nærmest arbeidet som skal utføres. Kraften i dette og den distribuerte modellen, kombinert med et OKR-målbilde som ble en naturlig del av det vi fulgte med på i det daglige, skapte en sterk rekrutteringsmuskel. Denne var i stand til å favne over et bredt spekter av prosesser og kandidater. Dette gjorde det mulig å lykkes med et viktig mål for organisasjonen, basert på overkommelig deltidsarbeid hos hver enkelt som var involvert.</p><p>Vi liker utfordringer og har satt et nytt strekkmål på rekruttering for 2020 som er enda et steg opp fra fjoråret. Satsingen innebærer at arbeidet med å videreutvikle hvordan vi jobber med rekruttering fortsetter. For å lykkes med ytterligere skalering blir løpende forbedring med utgangspunkt i kundefokus sentralt for hvordan vi skal klare å tiltrekke oss de flinke folkene.</p><p><em>Skrevet av:</em></p><p><a href=\"https://medium.com/u/e05b2b496862\"><em>Kristoffer Berg</em></a></p><p><a href=\"https://medium.com/u/3aab672ee2b8\"><em>Lars Kirkhus</em></a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=52f3d12c0a92\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/n%C3%A5r-h%C3%A5rete-m%C3%A5l-for-rekruttering-gruses-p%C3%A5-deltid-52f3d12c0a92\">Når hårete mål for rekruttering gruses på deltid</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Lars Kirkhus"}},{"node":{"title":"Er du utvikler? Gratulerer med sikkerhetsjobben!","link":"https://medium.com/sparebank1-digital/er-du-utvikler-gratulerer-med-sikkerhetsjobben-2ee00019f978?source=rss----e3c741b0efee---4","content":{"encoded":"<p>I SpareBank 1 Utvikling legger vi mye innsats i å lage løsninger med riktig sikkerhet innebygd. Noe av det gjøres av oss med “sikkerhet” i stillingstittelen, men den viktige sikkerhetsjobben er det utviklerne som gjør.</p><p>Av og til er sikkerhet enkelt å se. Det kan være autentisering, kryptering eller validering, eller annen sikkerhetsfunksjonalitet. Det er åpenbart viktig at det virker, men applikasjonssikkerhet er mye mer enn som så. Sikkerhet er summen av hvordan applikasjonen din reagerer når noen med uærlige hensikter pirker borti applikasjonslogikken eller den tekniske stacken. Sikkerhet er en egenskap i applikasjonen, og oppstår eller forsvinner i den daglige utviklingen av <em>helt vanlig kode.</em></p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/692/1*lFEIASdcE4WmltDoNEhd6A.png\" /><figcaption>Denne er katastrofal. Én ordinær kodelinje, så faller hele korthuset sammen. Ser du hvor?</figcaption></figure><p>Heldigvis jobber de fleste av oss også mer eller mindre smidig. Et nøkkelkonsept her er at utviklingsteamene har selvstendig ansvar for applikasjonene sine. Det inkluderer sikkerhetsegenskapene, like mye som ytelsen og brukeropplevelsen. Sikkerhetsarbeidet i en utviklingsorganisasjon er selvsagt mer enn å peke på at utviklerne har ansvaret, men man vil aldri lykkes om utviklerne ikke har forutsetningene for selv å oppdage at det kan være fare på ferde i dagens fjerde pull request.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/992/1*LqUn2Eg9uBV8M2CxWMbntw.png\" /><figcaption>Slike endepunkt som spiser JSON har du sikkert tusen av. Payload parses av et rammeverk, og du får et objekt ut. Vakkert. Men er du sikker på hva slags objekter som faktisk blir lagd? Eller at det bare er JSON som godtas?</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1009/1*qW3OzQo-xrLmWPaoIDcUKQ.png\" /><figcaption>Her har jeg oppdaget at applikasjonen godtar Content-Type satt til YAML! Da kan jeg unytte at rammeverket RESTeasy <a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9606\">tillater at man kan lage helt vilkårlige objekter.</a> Her lager jeg et ScriptEngineManager-objekt, som tar inn en URLClassLoader, som laster min javakode fra min server og kjører det på din. Dette er <a href=\"https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization\">insecure deserialization</a>, som bl.a. Jackson har hatt mye av.</figcaption></figure><p>Hvordan sørger man for at utviklerne lukter sikkerhetsuglene i kodemosen? At SQL må være parameterisert, eller at serialisering har sine fallgruver? Som mye annet er det øvelse som gjelder, og vi har den tvilsomme fordelen av at vi som bransje gjentar de samme sikkerhetsfeilene om og om igjen. Dermed kan man øve seg på alt som har gått feil før. Her følger noen varianter vi i SpareBank 1 Utvikling har prøvd med stort hell! Først en kort oversikt, så detaljer om hver enkelt, med fordeler og ulemper:</p><ol><li>Natas: Enkel testing av sårbar app</li><li>KWASHC: Fiks en rekke sårbarheter i en webapp</li><li>Hack yourself first: Strukturert workshop</li><li>Bugbounties: Test andres løsninger på lovlig vis</li><li>Online training</li></ol><p>Til slutt er det også et avsnitt om nyttige verktøy for sikkerhetstesting.</p><h3>Natas</h3><p><a href=\"https://overthewire.org/wargames/natas/\">Natas fra Over the wire</a> består av et tredvetalls “capture the flag”-oppgaver (CTF), der man skal utnytte en sårbarhet i oppgaveapplikasjonen for å skaffe seg en nøkkel som man bruker for å få tilgang til neste oppgave.</p><p>Fordeler</p><ul><li>Krever ikke noe oppsett. Det er bare å starte på oppgave 0 og fortsette derfra.</li><li>Fungerer godt som gruppearbeid.</li><li>Dekker svært mange vanlige sårbarhetsklasser, gjerne i flere varianter eller med utilstrekkelige fikser.</li><li>Går over http og ikke https, så forutsetter ikke at man må sette opp sertifikathåndtering i webproxy (se avsnitt om verktøy).</li></ul><p>Ulemper</p><ul><li>Kommer ikke med noen form for forklaring eller introduksjon til sårbarhetene, så det er nok en del av oppgavene som kan være vanskelige å starte på om man står på bar bakke. Man finner fasit for oppgavene om man søker, men da må man ha litt disiplin for ikke å bare lese hele løsningen.</li><li>Ikke fokus på hvordan man bør fikse sårbarhetene.</li></ul><h3>Kantega Web Application Security Hero Challenge (KWASHC)</h3><p><a href=\"https://github.com/kantega/kwashc\">KWASHC</a> er i stor grad utviklet av Kantega i Trondheim (si navnet litt fort!). Hovedfokuset er ikke på å finne sårbarhetene, men å fikse dem i koden. Består av en serverkomponent med oppgaver og scoreboard, og en <a href=\"https://github.com/kantega/kwashc-webapp/\">sårbar bloggtjeneste</a> skrevet i Java.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/796/1*LPMZ2Vc4OvaUc6toGNOt_w.png\" /><figcaption>Mange røde lys. Her trengs en Security Hero!</figcaption></figure><p>Fordeler</p><ul><li>Fokus på sikker koding, og ikke testing.</li><li>Forklarer sårbarhetene, så man har et greit grunnlag for å finne løsninger selv om det er nytt stoff.</li><li>Open source, så du kan tilpasse eller utvide som du vil.</li><li>Scoreboard gjør det underholdende å kjøre i mild konkurranseform, gjerne mellom grupper.</li></ul><p>Ulemper</p><ul><li>Krever litt lokalt oppsett.</li><li>Ikke den aller mest moderne tekniske frontendstacken, med Spring MVC og serverside-rendret jsp. Kanskje du vil modernisere den?</li></ul><h3>Hack yourself first</h3><p><a href=\"https://www.troyhunt.com/\">Troy Hunt</a>, bl.a. kjent for <a href=\"https://haveibeenpwned.com/\">‘; — have i been pwned?</a>, holder en veldig god applikasjonssikkerhetsworkshop kalt <a href=\"https://www.troyhunt.com/workshops/\">Hack yourself first</a>.</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FfBFLCP06vyA%3Ffeature%3Doembed&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DfBFLCP06vyA&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FfBFLCP06vyA%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"854\" height=\"480\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/27fbf4aad2a99001fe4a10c9369b5cac/href\">https://medium.com/media/27fbf4aad2a99001fe4a10c9369b5cac/href</a></iframe><p>SpareBank 1 Utvikling har både leid inn Troy for å holde denne workshopen on-site, og sendt enkeltutviklere på <a href=\"https://ndc-security.com/workshop/hack-yourself-first-how-to-go-on-the-cyber-offence/\">fellesworkshops hos NDC Security</a>. Det er en blanding av undervisning og oppgaver over to dager.</p><p>Troy har også mye <a href=\"https://www.pluralsight.com/authors/troy-hunt\">innhold online på Pluralsight</a>, inkludert <a href=\"https://www.pluralsight.com/courses/hack-yourself-first\">Hack yourself first i videoform</a>. Det er nok likevel ikke helt det samme som å delta på en workshop.</p><p>Fordeler</p><ul><li>Nøkkelferdig opplegg fra profesjonell kursholder.</li><li>To fulle dager lar en gå litt i dybden på mange tema. Holder man workshopen internt legger det rette til gode diskusjoner om hvordan man selv bygger løsninger.</li></ul><p>Ulemper</p><ul><li>Koster en del.</li></ul><h3>Bugbounties</h3><p>I år opprettet vi en applikasjonssikkerhetsgruppe for jobbing sammen på <a href=\"https://medium.com/sparebank1-digital/torsdag-er-den-nye-l%C3%B8rdagen-f547e55aadd3\">fagdagen</a>. Der har vi blant annet tenkt å jobbe med bugbounties. Bugbounty-program er uorganisert sikkerhetstesting: Firma registrerer løsningene sine hos tilbydere som <a href=\"https://www.bugcrowd.com/\">Bugcrowd</a> eller <a href=\"https://www.hackerone.com/\">HackerOne</a>, og så kan hver og en av oss sikkerhetsteste dem fritt innenfor de rammene de spesifiserer. Det er en veldig god øvelse på å få se ting fra angriperens perspektiv. -Hva inneholder denne applikasjonen? Hva slags teknologistack finner vi, og hvordan kan vi prøve å misbruke funksjonalitet eller implementasjon?</p><p>HackerOne har forøvrig en flott <a href=\"https://hackerone.com/hacktivity\"><em>Hacktivity</em></a>-side, der fulle rapporter på publiserte sårbarheter ligger. Mye fin inspirasjon.</p><p>Fordeler</p><ul><li>Det blir ikke mer realistisk enn produksjonsløsninger.</li><li>Man får utforske varierte teknologistacker, og får reflektere litt over likheter og forskjeller, og patterns som legger opp til sårbarheter. Da blir det enklere å gjenkjenne dem i egne systemer.</li><li>Det er veldig tilfredsstillende når man finner noe!</li><li>En del av programmene utbetaler penger for funn.</li></ul><p>Ulemper</p><ul><li>Systemene som er del av slike programmer er typisk ganske modne, og det kan være relativt utfordrende.</li><li>I motsetning til opplæringsløsninger og CTF’er er man aldri sikker på om det faktisk er en sårbarhet å finne i den delen av løsningen man pirker på.</li><li>Man må være den første som rapporterer en gitt sårbarhet i en løsning for å bli premiert direkte. Det er likevel tilfredsstillende å finne dem.</li><li>Programmene krever typisk en form for proof-of-concept-angrep som beviser sårbarheten. Avhengig av sårbarheten kan det være omfattende å lage. Se <a href=\"https://hackerone.com/hacktivity\">hacktivity</a> for eksempler.</li></ul><h3>Online training</h3><p>Flere leverandører har opplegg for guidet selvopplæring i applikasjonssikkerhet. SpareBank 1 Utvikling har foreløpig ikke valgt å gå for en slik løsning, men det kan være det passer andre utviklingsorganisasjoner bedre. Av de jeg har prøvd selv, virker <a href=\"https://www.adversary.io/\">Adversary</a> som en av de mer komplette. Du kan teste dem selv, med <a href=\"https://blog.adversary.io/facebook-hack\">denne gjennomgangen av en feil i autorisasjonskontrollen Facebook hadde i 2018</a>.</p><p><a href=\"https://portswigger.net/web-security\">Portswigger Academy</a> er gratis, og har også noen gode labs det er verdt å ta en kikk på.</p><p>Fordeler</p><ul><li>Lav terskel for å komme i gang.</li><li>Dekker typisk bredt.</li></ul><p>Ulemper</p><ul><li>Noe varierende kvalitet og forvirrende plattformer.</li></ul><h3>Verktøy</h3><p>Skal man eksperimentere med websikkerhet er det veldig nyttig å bruke en webproxy, som lar en se og endre på trafikken mellom nettleser og server. Noen alternativer:</p><ul><li><a href=\"https://portswigger.net/\">Burp Suite</a>. Industristandarden. Koster litt i full utgave. Verdens eneste fungerende Java Swing-applikasjon!</li><li><a href=\"https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project\">OWASP ZAP</a>. Gratis, open source. Den andre Java Swing-applikasjonen.</li><li><a href=\"https://www.charlesproxy.com/\">Charles proxy</a>. Populært på Mac.</li><li><a href=\"https://www.telerik.com/fiddler\">Fiddler</a>. Populært på Windows.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*o5dXD38Iq-r2k7kaOAPBkg.png\" /><figcaption>Burp i aksjon. Hva skjer om jeg endrer det som ser ut som en konto-ID, og sender requesten på nytt? Det er enkelt å finne ut med slike verktøy.</figcaption></figure><p>Heldigvis går de fleste seriøse webløsninger over TLS (https), men det betyr også at webproxyen må terminere TLS-forbindelsen for å klare å lese eller endre på innholdet. For å unngå at nettleseren (med rette) protesterer på sertifikatfeil, forutsetter det at man setter opp nettleseren sin til å stole på CA-sertifikatet som proxyen har generert. De forskjellige proxyleverandørene forklarer hvordan man går fram for å gjøre det, men et konkret tips er å bruke en dedikert nettleser, så slipper man å sende all legitim trafikk gjennom proxyen når man ikke tester. Firefox har sitt eget oppsett av både proxy og sertifikater, mens andre i større grad baserer seg på globale systeminnstillinger.</p><h3>Oppsummering</h3><p>Her var det mye å velge mellom, selv om det ikke er en utfyllende liste. Mange av tilnærmingene utfyller hverandre på en god måte, men hvor skal man begynne? Det kommer mye an på hvor mye man føler man kan, men en mulig rekkefølge å iterere over kan være:</p><ol><li>Om du kan, dra på Hack yourself first. Den har blitt holdt flere ganger i -Norge, for eksempel på <a href=\"https://ndc-security.com/\">NDC Security</a> i Oslo.</li><li>Online training om noen tema, enten i de dedikerte løsningene foreslått over, eller på <a href=\"https://www.pluralsight.com/\">Pluralsight</a>.</li><li>Når man er klar til å eksperimentere litt selv kan må gå over på NATAS eller KWASHC.</li><li>Bugbounties er supert når man er klar til å eksperimentere på virkelige systemer!</li></ol><p>Happy hacking!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FlpocbfDXWyOZ2%2Ftwitter%2Fiframe&amp;url=https%3A%2F%2Fgiphy.com%2Fgifs%2Fhacker-lpocbfDXWyOZ2&amp;image=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FlpocbfDXWyOZ2%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy\" width=\"435\" height=\"326\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/ccf1ae94a5427c2c844a32ed831b1262/href\">https://medium.com/media/ccf1ae94a5427c2c844a32ed831b1262/href</a></iframe><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2ee00019f978\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/er-du-utvikler-gratulerer-med-sikkerhetsjobben-2ee00019f978\">Er du utvikler? Gratulerer med sikkerhetsjobben!</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Jon Are Rakvåg"}},{"node":{"title":"Ikke jobb mens jeg forstyrrer!","link":"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-2a9e14824033?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Våren 2015 var jeg på vei til å bli utbrent.</p><p>Vi hadde laget ny nettbankplattform som stadig flere av teamene våre tok i bruk. Samtidig var ikke plattformen ferdig. Det var kode vi måtte forbedre, samtidig som nye krav dukket opp.</p><p>Selv om mye var likt den gamle plattformen, var også mye annerledes. Teamene trengte hjelp til å forstå detaljene. Det gjorde at utviklingsarbeidet stadig ble avbrutt av pirk på skulderen, meldinger, eposter og møter.</p><p>Kombinasjonen av sterkt leveransepress og hyppige avbrudd var i ferd med å spise oss opp. Hvordan skulle vi klare å levere forbedringer raskt og med høy kvalitet, når vi ble avbrutt hele tiden?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*idFSddZ2a7OBDGZaZMI_aQ.jpeg\" /><figcaption>Foto: Getty Images</figcaption></figure><p>Avbruddene gjorde at vi følte at vi fikk gjort svært lite. Situasjonen var uholdbar. Samtidig visste vi at flere av avbruddene var verdifulle for systemet som helhet: Hvorfor skulle folk bruke tid på å finne ut av hvordan detaljene fungerte, eller regne ut hva som ville være beste tilnærming til en ny utfordring i den nye arkitekturen, når vi ofte satt med svaret?</p><p>I SpareBank 1 Utvikling bruker vi ofte <a href=\"https://en.wikipedia.org/wiki/A3_problem_solving\">A3-metoden</a> når vi har vanskelige problemer vi skal løse. Vi valgte å kjøre en A3 på avbruddsproblemet. Hvordan kunne vi hjelpe de rundt oss, og samtidig gjøre utvikling på en bærekraftig måte?</p><h3>Hvorfor er avbrudd så krevende for utviklere?</h3><p>Dette er et lurespørsmål.</p><p>Avbrudd er ikke spesielt krevende for utviklere. Avbrudd er spesielt krevende for alle som driver med problemløsning.</p><p>Alle som jobber med problemløsning bygger mentale modeller av problemdomenet i hodet. Disse modellene har flere abstraksjonsnivåer, som en må ha i hodet samtidig for å klare å resonere rundt problemet, og forhåpentligvis også nærme seg en løsning.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/462/1*PTaP5UwEBwk4ToZSf8fVWA.png\" /><figcaption><a href=\"https://www.monkeyuser.com/assets/images/2018/79-focus.png\">https://www.monkeyuser.com/assets/images/2018/79-focus.png</a></figcaption></figure><p>Avbrudd som omhandler andre tema enn akkurat det en jobber med, river ned den mentale modellen. Den må bygges opp igjen, før en kan fortsette med arbeidsoppgaven. <a href=\"https://www.google.com/search?q=the+cost+of+context+switching\">Denne kontekstbyttingen er mentalt krevende, og den tar tid.</a> I arbeidet med A3-en, målte vi på de forskjellige typene avbrudd, og lengden på dem. Vi fant forskjellig byttekost for forskjellige typer avbrudd, med i snitt tre minutter for chat, opp til femten minutter for møter.</p><p>Hvis det i tillegg er systemutvikling en driver med, og en er midt i en debuggingssesjon for å forstå mer av problemdomenet, så kan byttekosten gå vesentlig opp, siden en i tillegg til å bygge opp den mentale modellen igjen, også må få systemet tilbake i tilstanden en var i, som før en ble avbrutt.</p><p>Alle har en begrenset mengde kognitiv kapasitet, som vi kan bruke av hver dag. Gjennom dagen blir den brukt opp. Avbruddene, og tiden det tar å komme seg tilbake til oppgaven en holdt på med, spiser av denne kapasiteten.</p><h3>Forskjellige typer avbrudd</h3><p>Vi så at vi trengte håndtere avbruddene forskjellig. Vi har delt dem inn i fire typer:</p><ul><li>Møter — både egne og andres</li><li>Elektronisk kommunikasjon — chat, epost, SMS osv</li><li>Selvpåførte konsentrasjonsavbrudd — tankene spinner avgårde, enten på oppgaver en vet en skal gjøre, eller en kommer på nye oppgaver som trengs å gjøres</li><li>Pirk på skulderen og kapring ved kaffeautomaten — “Har du fem minutter?”</li></ul><h3>Ta tilbake kontrollen over tiden din</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VI2k9Ee9ieMAnZ7Xgva3cQ.png\" /><figcaption>En fin dag for en leder. En trist dag for en utvikler.</figcaption></figure><p>For mange prosjekt- eller teamledere er kalenderen over en drømmedag.</p><p>For en utvikler er denne dagen ødelagt før den har begynt. Hun vet at med denne kalenderen kommer hun nesten ikke til å få gjort noe som helst:</p><ul><li>Hun kommer på jobb åtte-halv ni</li><li>Sjekker epost, Slack og nye <a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">Pull Requester</a></li><li>Rekker akkurat starte på utviklingsoppgaven før retroen</li><li>Forbereder seg litt til retroen</li><li>Gjennomfører retroen</li><li>Gjør litt etterarbeid etter retroen</li><li>Rekker kanskje akkurat komme igang igjen med utviklingen før hun skal spise lunsj i elleve-halv tolv tiden</li><li>Kommer tilbake fra lunsj og sjekker epost, Slack og nye Pull Requester</li><li>Rekker akkurat komme igang igjen med utviklingen før hun må forberede seg litt til workshopen</li><li>Gjennomfører workshopen</li><li>Litt etterarbeid etter workshopen</li><li>Rekker kanskje fortsette litt på utviklingsoppgaven før hun går hjem i fire-halv fem tiden</li></ul><p>Mer sannsynlig er hun såpass sliten etter totimers workshop, at det heller blir en ekstra kaffekopp og en ny sjekk av epost og Slack før hun går hjem igjen, frustrert over nesten ikke å ha produsert noen ting på en hel dag.</p><p>Paul Graham har skrevet en fantastisk artikkel om disse utfordringene. Den heter <a href=\"http://www.paulgraham.com/makersschedule.html\">Maker’s Schedule, Manager’s Schedule</a>.</p><p>Slik kunne vi ikke ha det.</p><p>Løsningen for oss ble å innføre en fast blokk i kalenderen hver dag:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/549/1*aJQKAnNf6tUOzBogm4BsRA.png\" /><figcaption>Fast blokk i kalenderen hver dag for å kunne jobbe effektivt</figcaption></figure><p>Vi kan nå bare kalles inn til møter fra 13 og utover. Med denne blokken i kalenderen har vi fått tilbake kontrollen over vår egen tid. Folk kan velge å kalle oss inn til møter også mellom åtte og 13, men da er det vi som bestemmer om vi skal prioritere møtet eller ikke. Er det et viktig møte, ber vi som oftest om at møtet flyttes til etter 13.</p><h3>Når på dagen bør en ha møter?</h3><p>Vi har valgt å blokke ut første del av dagen, fordi det er da vi er mest opplagt og jobber best. Det er da det er viktigst å ha sammenhengende tid til å drive med utvikling for oss. Noen jobber best på kveld og natt, men for oss er det de første timene av arbeidsdagen som gjelder.</p><p>Møter som krever høy grad av interaksjon og meddeltakelse bør legges så tidlig på ettermiddagen som mulig. Møter som er av typen informasjonsmøter, for eksempel allmøter og demoer, kan gjerne legges mot slutten av dagen.</p><p>Hvordan vi har håndtert de andre avbruddstypene går vi nærmere inn på i<a href=\"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-del-to-3b389d1cb71d\"> del to av denne bloggposten</a>.</p><p>Takk til Børge Lund for <a href=\"https://lunchshop.no/produkt/boker/lunch-bok-1-sykt-travelt\">hans humoristiske betraktninger rundt dette temaet</a>, og for tittelen til denne artikkelen.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2a9e14824033\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-2a9e14824033\">Ikke jobb mens jeg forstyrrer!</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Vidar Moe"}},{"node":{"title":"Vaner, uvaner og abonnement","link":"https://medium.com/sparebank1-digital/vaner-uvaner-og-abonnement-7ff2567e7413?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Hvor mange har ikke inngått et abonnement, bare for innse at det etter kort tid gir deg dårlig økonomi og samvittighet? Selv den mest viljesterke har vel inngått et treningsabonnement i januar for så å bli et passivt støttemedlem, som sørger for at de få som holder ut gjennom året, opplever blanke speil, skinnende vekter og dundrende musikk. Dette er historien om hvordan vi i SpareBank 1 bruker maskinlæring for å hjelpe kundene våre til å få oversikt over abonnementene sine.</p><p>Men la oss starte fra begynnelsen. I SpareBank 1 bruker vi maskinlæring for å klassifisere banktransaksjoner. Vi ser på om du f.eks har vært i matbutikken, eller om du har vært på kafé. Tanken er at du med et filter kan få oversikt over hvor mye du bruker på f.eks mat i måneden, eller hvor mye du bruker på moro og fjas. Det vi derimot manglet, var et filter for faste utgifter og abonnement. Mange kunder har større nytte av å kunne kategorisere hva som er faste utgifter og ikke, eller rett og slett få oversikt over hvilke abonnement en har. I tillegg inngikk vi en avtale med en tredjepartsleverandør om abonnementshåndtering. Denne tredjeparten tilbyr kansellering av abonnement og endring av abonnement (f.eks endring til et billigere mobilabonnement med de samme vilkårene).</p><p>Som så mange andre modeller, fikk vår første modell en høy bias (partiskhet). Den fungerte veldig godt for de som lagde modellen. Kort fortalt ble det en regex lignende modell som sa at Netflix-, HBO- og Spotify-transaksjonene dine er abonnement. Vi fikk forsåvidt gode tilbakemeldinger fra våre kolleger da de også stort sett kun har en eller flere av disse 3. Alt så rosenrødt ut og vi kunne sole oss i glansen og flotte oss med vanskelige maskinlæringutrykk for å fremheve vår egen fortreffelighet.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1022/1*jVqoqOhxHdTNxwLyZJ1GbQ.png\" /><figcaption>Alle elsker Netflix</figcaption></figure><p>Hvor mange forskjellige abonnement tror du kundene til SpareBank 1 har? Jeg kan gi deg et hint: vi har rundt en million kunder. Og jeg skal gi deg enda et hint: svaret er større enn 3. For det viste seg ganske fort at det finnes mange abonnement. Mange, mange abonnement…</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*S4zd3vRufVdYjY6NVdZlXg.jpeg\" /><figcaption>Det var bare en ting å gjøre, brette opp ermene.</figcaption></figure><p>For å forstå løsningen må man skjønne problemet. Klientene våre sitter på transaksjoner som spenner over flere måneder og år. Transaksjonene har begrenset informasjon, men vi valgte å benytte oss av dato, beløp, transaksjonskode (unik kode som spesifiserer hva slags type transaksjon det er) og transaksjonstekst.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*gn3Plz2uF82EniTfx_iehw.png\" /><figcaption>Eksempel på transaksjon</figcaption></figure><p>Maskinlæringsalgoritmene trenger tall for å fungere, så det første steget er vektorisering. Som så mange andre bruker vi <a href=\"https://pandas.pydata.org/pandas-docs/stable/\">Pandas</a> for å lese og manipulere store datasett.</p><h4>Dato</h4><p>Det første vi gjør, er å endre dato til dag i måneden (i eksemplet blir 22.12.2019 til 22) for så å bruke sci-kit learns <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html\">StandardScaler</a> på den. Rammeverket beregner gjennomsnittet og variansen for oss, basert på hele treningsdatasettet. Da kan vi senere (når vi skal beregne nye abonnement) vektorisere ved å bruke ligningen under.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/300/1*gpmxbqTQz2Cxzyc6HiVMeg.png\" /><figcaption>Standardscalerens ligning</figcaption></figure><h4>Beløp</h4><p>Den neste featuren (egenskapen) er beløp, som vi bruker sci-kit learns <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html\">RobustScaler</a> på. Grunnen er at vi har noen veldig store beløp som gjør at denne fungerer bedre enn Standardscaleren.</p><p>Men hvorfor gjør vi om tall til tall, jeg sa jo nettopp at maskinlæringsalgoritmene trenger tall for å fungere? Forklaringen ligger i at tallene bør være i noenlunde samme størrelsesorden og at de bør ligge over og under 0 for å fungere optimalt. Tenk på dag i måneden. Her har vi: <em>Min(dag_i_mnd)</em> = 1 og <em>Max(dag_i_mnd)</em> = 31.</p><p>Hva med beløpet? Siden vi har alt fra lønnstransaksjoner og boligsalg til store innkjøp kan <em>Min(beløp)</em>=mange hundre tusen i minus og <em>Max(beløp)</em>=mange hundre tusen i pluss. Dag i måneden og beløp er altså på helt forskjellige skalaer når det gjelder nominelle tall. Ved å normalisere de, får vi begge featurene rundt null og på samme skala.</p><h4>Transkasjonskode</h4><p>Transaksjonskodene er av type kategori (categorical features) og bør <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelBinarizer.html\">one-hot-encodes</a>. I praksis har vi noen hundre transaksjonstyper i bruk og hver transaksjon vektoriseres da til ca. 200 dimensjoner, der 1 dimensjon har lengde 1 og de øvrige har lengde 0.</p><p>La meg forklare med et litt enklere eksempel. La oss si at vi har 3 transaksjonskoder (i stedet for 200): R_013 (Lønn), R_714 (Visakjøp) og R_718 (Minibank). En transaksjon har en av disse 3, men aldri flere. “Vanlig” normalisering gir ingen mening her. R_718 er på ingen måte “større enn” R_714, på samme måte som at R_710 ikke er “mindre enn” R_714. Det er bare forskjellige transaksjonskoder som er tilfeldig nummerert og som har forskjellig mening.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*25WpXsJPS0f4gDe3ETSUsw.png\" /><figcaption>Eksempel på one-hot-encoding</figcaption></figure><h4>Transaksjonstekst</h4><p>Transaksjonsteksten er den siste og kanskje vanskeligste. Det finnes mange måter å represente tekst på, men vi har valgt å gå for word embeddinger ved bruk av fastText. <a href=\"https://fasttext.cc/\">fastText</a> er et rammeverk fra Facebook som gir oss 100-dimensjonale word embeddings. Hvert unike ord er altså representert ved 100 <em>floats</em> og vi vektoriserer opp til 7 ord per transaksjonstekst. Dette kan virke merkelig, men disse embeddingene har visse egenskaper som vi benytter oss av. Syntaktisk og semantisk like ord vil f.eks ligge nære hverandre i vektorrommet. Vi benytter transfer learning når vi trener våre egne word embeddinger (vi baserer oss på pre-trente embeddinger fra <a href=\"http://vectors.nlpl.eu/repository/#\">Language Technology Group</a>).</p><p>Til sammen gir dette oss en 902 dimensjonal feature vector:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Oyc8Z2Yt1ZpWhLqLuBLBoQ.png\" /></figure><p>Når disse featurene er vektorisert, clustrer vi de ved hjelp av <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html\">dbscan</a>. dbscan er en unsupervised clustringsalgoritme som er flink til å finne clustre med lik tetthet og tilfeldig form. Det viktigste argumentet til dbscan er <em>epsilon</em> og <em>min_samples</em>. <em>min_samples</em> bestemmer hvor mange punkter som minst må være innenfor <em>epsilon</em> avstand fra hverandre for å kalles kjerneelementer. Oppfyller man dette kriteriet har man et cluster. Når man har dette minimumet av kjerneelementer, kan man se på grenseelementer som må være innenfor epsilon avstand fra minst et kjernepunkt. Disse vil også bli medlemmer av clusteret. Vi hadde størst suksess med en <em>epsilon</em> rundt 0.3 og <em>min_samples</em> ≥ 3 når vi skulle finne de faste utgiftene. Altså, minst 3 punkter som er innenfor 0.3 avstand fra hverandre + et tilfeldig antall grenseelementer som er innenfor 0.3 avstand fra minst et av disse kjernepunktene.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/664/1*3YVpjmQEGM8O5ecOrTvPog.png\" /><figcaption>1,2 og 3 er mindre enn epsilon avstand fra hverandre og er derfor kjerneelementer. 4 er kun mindre enn epsilon avstand fra 2 og kalles da et grenseelement. 5 er mer enn epsilon avstand fra alle og kalles støy.</figcaption></figure><p>Et par observasjoner (hopp over disse hvis du synes dette avsnittet var vanskelig).</p><ul><li>Vi benytter <em>euclidian distance</em> i clustringen. Det finnes flere måter å måle avstand på (se <a href=\"https://docs.scipy.org/doc/scipy/reference/spatial.distance.html\">scipy spatial distance</a>), men det viste seg at <em>euclidian distance</em> ga best resultat. Med <em>word embeddings</em> benytter vi oss ofte av <em>cosine similarity</em>, for å finne likheter mellom ord. Hvordan passer dette inn med <em>euclidian clustring</em>? Løsningen ligger blant annet i det som kalles <em>monotonic transformations</em>. Når <em>cosine similarity</em> øker, minsker <em>euclidian distance</em> (når <em>unit vector length</em> er lik), altså akkurat det vi ønsker. Den komplette forklaringen er mer kompleks og krever en egen bloggpost.</li><li>Et annet punkt er at dag i måneden gir månedlige abonnement. Vi har også kvartalsvise, halvårs og årsabonnement, løst ved å lage en ekstra feature basert på modulusfunksjoner.</li><li>Du kan også oppleve noen problemer ved å bruke dag i måneden i månedslutten hvis du får helg/helligdag på en sen dato.</li><li>Den siste utfordringen er at du vil ha markert Netflix abonnementet ditt allerede den første måneden du får opp transaksjonen, ikke vente til du har 3 Netflix transaksjoner. Hvordan dette ble løst ligger utenfor scopet til denne bloggen, men ta gjerne kontakt så deler vi gjerne.</li></ul><h3>Resultater</h3><p>Her er et typisk mobilabonnement. Kunden har variable summer (brukt mer mobildata f.eks) og variable datoer (lørdag-/søndag-/helligdag-problematikk, bankene prosesserer ikke betalingen til abonnementet før første bankdag). Ved å ha en passe epsilon under clustringen vil disse variasjonene være små nok til å bli naboer i det 902 dimensjonale vektorrommet.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*76y7WxhAcsuHQf56iqj_ww.png\" /></figure><p>Et annet problem vi hadde med vår første regex versjon, er de firmaene som både har abonnement og selger enkeltprodukter. Et eksempel er Viaplay, en strømmetjeneste som har både abonnement og muligheten for å leie enkeltfilmer. I dette tilfellet markerer clustringen kun de som faktisk er abonnementer (markert som grønne).</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*fmJ2gxF8b0Rsn-D4cToAnA.png\" /></figure><p>Ikke alle abonnement kan finnes med regex’er. Mange bedrifter bruker kundenummer og faktureringsnummer som transaksjonstekst.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qUV1FOC0VccHhGyUOjQqkg.png\" /></figure><p>Noen bedrifter endrer transaksjonsteksten fra måned til måned.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Tev-JQaDmCeYT-iSyQ_qzQ.png\" /></figure><p>Noen ganger er navneendringene store. Hvordan er det mulig for algoritmen å skjønne at CanalDigital plutselig heter Telenor? I vanlig språk er <em>god, bra </em>og<em> fantastisk</em> semantisk like ord. På samme måte viser våre word embeddinger at CanalDigital er det ordet som er mest likt Telenor.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*eJ1rxIMZ-Np1215FlaD0Aw.png\" /></figure><p>Disse eksemplene er noen få eksempler på hvordan algoritmen fungerer. De viser dog ikke det store volumet vi fant. Hos kundene våre finner vi hundrevis, om ikke tusenvis av abonnement. Det er alt fra aviser og treningssentre til datingtjenester og japanske tegneserier. Det er norske, amerikanske, polske og rumenske abonnement. Abonnement som du nå kan filtrere og håndtere i SpareBank 1 sin mobilbank.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7ff2567e7413\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/vaner-uvaner-og-abonnement-7ff2567e7413\">Vaner, uvaner og abonnement</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Inge Johnsen"}},{"node":{"title":"“Ikke nok et jævla statusmøte!”","link":"https://medium.com/sparebank1-digital/ikke-nok-et-j%C3%A6vla-statusm%C3%B8te-2d72284897c3?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Vi ville for mye, og fant oss selv i det ene statusmøtet etter det andre. Backloggen økte for hver eneste dag, men målene var like langt unna. Vi måtte endre måten vi jobbet på — og det fort!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*CSBBQyfmVQzjJx36\" /></figure><p><em>Seks måneder tidligere:</em> Team Oversikt — et av utviklingsteamene som lager mobilbanken til SpareBank 1 hadde såvidt begynt å jobbe med OKR’er, og alle var begeistret over å endre fokus fra oppgaver til mål. Ved inngangen av kvartalet hadde vi samlet hele teamet, og hamret ut våre “objectives”. Vi satte noen få, ambisiøse “key results”, som føltes akkurat passe komfortable å sikte mot. Alt etter boken. Vi oppdaterte Trello, syncet med Jira og Slack, kalte inn til regelmessige backlogmøter, teammøter og stand ups.</p><p><strong>Noe gikk galt på veien…</strong></p><p>Kvartalet var over, alle hadde gjort sitt beste. Vi hadde riktignok nådd et par av målene, men vi var milevis fra andre. Noen hadde vi ikke jobbet med i det hele tatt. Vi klarte ikke å holde fokus gjennom kvartalet, og teamet var lei av hyppige koordineringsmøter. Det var ingen tvil om at OKRer var riktig for oss, men vi måtte finne en mer effektiv måte å jobbe med de på.</p><p><strong>Monday commitments and friday wins</strong></p><p>Inspirasjon fant vi hos den amerikanske forfatteren <a href=\"https://medium.com/@cwodtke\">Christina Wodtke</a>. I boken ‘Radical Focus” beskriver hun en elegant og enkel måte å sikre fokus på de riktige tingene, samtidig som man tar vare på kvaliteten, teamet og kunden. Essensen er at det du gjør hver dag, må ha en direkte kobling til de målene du har satt deg. Det så ut til å være akkurat hva vi trengte.</p><figure><img alt=\"Bilde: OKR eksempel fra Radical Focus\" src=\"https://cdn-images-1.medium.com/max/600/0*XSYRcpJmg1q9tRSa\" /><figcaption>Bilde: OKR eksempel fra <em>Radical Focus</em></figcaption></figure><p>Vi skisset opp den nye tavla,og erstattet møtene våre med monday commitments, og friday wins:</p><p><strong>Monday commitments</strong> kickstarter uken. Hele teamet er samlet foran tavla. “Hvordan ligger vi an i forhold til målene vi har satt oss” og “hva må vi ha fokus på denne uken for å nå målet?” Vi blir enige om de viktigste oppgavene og det er kun de som havner på tavla. Dette er de oppgavene vi forplikter oss til i felleskap, og som vi strekker oss for å levere innen fredag. Vi har satt av 15 minutter til møtet.</p><p><strong>Fridays wins</strong> er for vinnere, og handler om å feire hva vi har fått til og dele hva vi har lært. Vi setter av minst 30 min i kalenderen, og setter oss i kaffekroken. Helst har noen på teamet bakt eller kjøpt med noe godt å spise. Resultatet er alltid stolthet over det vi har fått til sammen. Og her skal alt frem — det er mye som fortjener oppmerksomhet, uten at det nødvendigvis har flyttet nøkkeltall.</p><blockquote><em>“You don’t have to do it perfectly, but you do have to commit!”- Christina Wodtke</em></blockquote><p><strong>Mandag 6 uker senere</strong></p><p>Det er stort engasjement fra hele teamet. Tallene fra forrige uke er kommet opp på tavla, og alle har ideer til hvordan vi skal komme enda nærmere målet. Nye kamper skal kjempes — og vinnes. Vi gjør en team-helsesjekk, og scorer 4,7 av 5 på spørsmål om det er tydelig for alle hvilke mål de jobber mot.</p><p>Ved å endre måten vi jobber på har vi fått en sterkere kobling mellom de aktivitetene vi gjør hver dag og målene vi har satt oss. Radikalt fokus gir energi til teamet og bygger kultur og samhold. Og de jævla statusmøtene? De er ikke lenger en kilde til frustrasjon, men noe som gir teamet økt fokus og energi. Og når vi lykkes, feirer vi alle seire sammen!</p><p><strong>Skrevet av:<br></strong><a href=\"https://medium.com/u/b1c63e6910c7\"><strong>Marthe Slaatsveen</strong></a><br><a href=\"https://medium.com/u/dc13f3a6376\"><strong>Thomas Allan Nygaard</strong></a></p><p><strong>Referanser:<br></strong>Christina Wodtke (2015) <em>Radical Focus</em>. Cucina Media, LLC<br>John Doerr (2018) <em>Measure what matters</em>. Portfolio</p><p><strong>Les mer<br></strong>…om hvordan egen fagdag radikalt forbedret tilfredsheten i organisasjonen<br><a href=\"https://medium.com/sparebank1-digital/torsdag-er-den-nye-l%C3%B8rdagen-f547e55aadd3\">https://medium.com/sparebank1-digital/torsdag-er-den-nye-l%C3%B8rdagen-f547e55aadd3</a></p><p>og <a href=\"https://www.linkedin.com/posts/vidarmoe_sparebank1utvikler-kontinuerligforbedring-activity-6587972374740643840-UhqP\">Endelig et statusmøte vi utviklere liker</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2d72284897c3\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/ikke-nok-et-j%C3%A6vla-statusm%C3%B8te-2d72284897c3\">“Ikke nok et jævla statusmøte!”</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Thomas Allan Nygaard"}},{"node":{"title":"Velkommen til Bankbokklubben","link":"https://medium.com/sparebank1-digital/velkommen-til-bankbokklubben-2333a05343b8?source=rss----e3c741b0efee---4","content":{"encoded":"<p>En hel klokketime dedikert til et spennende tema, med ivrig diskusjon blant vennlige og motiverte folk på søken etter innsikt og læring, i kombinasjon med en god kopp kaffe. Kan man egentlig starte dagen på en bedre måte?</p><p>Hver onsdag morgen møtes Bankbokklubben i SpareBank 1 Utvikling på en kafe i nærheten av kontoret for å prate om det siste kapittelet i en bok vi leser sammen. Hvorfor gjør vi dette?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/545/1*0Zfz1UVZd1G-qOBV2ciEpg.png\" /></figure><p>Formålet med klubben er læring med en felles rytme gjennom fordypning i utvalgte bøker innen vårt interessefelt. Fremgangsmåten følger gjerne et slikt mønster:</p><ul><li>Gruppen blir enige om valg av ny bok. Kandidatlisten inneholder som regel en rekke godbiter, og det smerter å måtte velge bort de fleste.</li><li>En avtalt del av boken leses på egenhånd, f. eks. et kapittel eller to.</li><li>På det ukentlige klubbmøtet diskuteres hovedpunktene i kapittelet. Hva betyr dette for oss i SpareBank 1 Utvikling, og hvordan kan vi teste ut elementer vi har lyst til å undersøke nærmere?</li><li>Rett som det er gjennomfører vi små eksperimenter og diskutere betydningen av funnene.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*RoQS4PSXvBpga2EwESxr6w.jpeg\" /><figcaption>Bankbokklubben i SpareBank 1 Utvikling tar en pause i diskusjonen av hva boken <a href=\"https://www.amazon.com/gp/product/B013UWFM52/ref=dbs_a_def_awm_hsch_vapi_tkin_p1_i0\">Deep Work</a> byr på av innsikt, muligheter og utfordringer.</figcaption></figure><p>Hvorfor fungerer dette for oss?</p><ul><li>Vi jobber med utrolig mange flinke folk, og det er interessant og nyttig med bredden i perspektiv dette skaper.</li><li>Man kommer dypere i materialet gjennom diskusjon og repetisjon.</li><li>Innsatsen som legges ned gjøres overkommelig ved å dele opp en bok i mindre bolker.</li><li>Det blir enklere å lese ved en positiv forpliktelse i det å møtes for å jobbe videre med materialet sammen.</li><li>Man kommer i kontakt med interessante temaer og tilegner seg innsikt man trolig ellers ikke ville oppnådd på egenhånd.</li><li>Vi pleier en felles interesse i det å fordype seg i fag og læring innen vårt fagområde.</li><li>Det er hyggelig å være sammen. Vi styrker samholdet i gruppa og lærer hverandre å kjenne enda bedre. Dette skjer på tvers av grupperingene vi jobber mest i.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*2-owst8t2EPr-WDPCZhuTg.jpeg\" /><figcaption>Med mange sterke kandidater er nåløyet trangt for å bli valgt som felles bok i Bankbokklubben.</figcaption></figure><p>Bankbokklubbens opprinnelse kan spores tilbake til da det interne utviklingsmiljøet i selskapet ble etablert. I løpet av denne perioden ble en lesesirkel benyttet for å gå gjennom og jobbe med innholdet i boken <a href=\"https://www.amazon.com/Toyota-Way-Management-Principles-Manufacturer/dp/0071392319\">The Toyota Way.</a> Hver enkelt leste først et kapittel for seg, som så ble diskutert i gruppen med fokus på hva innholdet betydde for miljøet vårt. Dette skapte en felles plattform, og ga mye energi, til arbeidet med hvordan arbeidsprosesser og -miljø ble etablert og videreutviklet. Da siste kapittel var avsluttet, og boken lagt til side, var det flere oss som kjente på den samme følelsen. Den positive dynamikken fra lesesirkelen ville vi svært gjerne beholde. Dermed gikk det ikke lang tid før Bankbokklubben var etablert.</p><p>Her er et utvalgt av våre favorittbøker:</p><ul><li><a href=\"https://www.amazon.com/Culture-Code-Secrets-Highly-Successful/dp/0525492461\">Culture code</a></li><li><a href=\"https://www.amazon.com/This-Lean-Resolving-Efficiency-Paradox-ebook/dp/B00JZZS7Q0\">This is Lean</a></li><li><a href=\"https://www.amazon.com/Loonshots-Nurture-Diseases-Transform-Industries/dp/1250185963\">Loonshots</a></li><li><a href=\"https://www.amazon.com/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339\">Accelerate</a></li><li><a href=\"https://www.amazon.com/Good-Great-Some-Companies-Others/dp/0066620996\">Good to Great</a></li><li><a href=\"https://www.amazon.com/Lean-Enterprise-Performance-Organizations-Innovate/dp/1449368425\">Lean Enterprise</a></li><li><a href=\"https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592\">The Phoenix Project</a></li></ul><p>For tiden leser klubben boken <a href=\"https://www.amazon.com/gp/product/B013UWFM52/ref=dbs_a_def_awm_hsch_vapi_tkin_p1_i0\">Deep Work</a> og diskuterer ting som: Hva er et godt mønster for bruk av tiden vår, for hver enkelt og for gruppene man er del av? Hva er gode strategier for å oppnå en slik tilstand for kunnskapsarbeidere? Hvordan bør vi måle bruk av egen tid, og hvilke eksperimenter kan vi enkelt gjennomføre for å etablere data og innsikt?</p><p>Plutselig er en time over. Tiden formelig fløy avgårde, og vi er klare for å gyve løs på resten av dagen. Vel vitende om at nok et spennende kapittel venter for Bankbokklubbens medlemmer i uken som kommer.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2333a05343b8\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/velkommen-til-bankbokklubben-2333a05343b8\">Velkommen til Bankbokklubben</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Kristoffer Berg"}},{"node":{"title":"Utvikleravdelingen er død! Lenge leve utvikleravdelingen!","link":"https://medium.com/sparebank1-digital/utvikleravdelingen-er-d%C3%B8d-lenge-leve-utvikleravdelingen-d4596a33ea89?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Vi har vært på reisen med kryssfunksjonelle team hver dag siden 2014. Vi jobber så svetten siler med å gi teamene våre best mulig forutsetninger for å løse oppgavene sine.</p><p>Plutselig en dag oppdaget vi at vi hadde kastet ut babyen med badevannet. Vi hadde optimalisert vekk utviklerkulturen vår.</p><p>Hva var det egentlig som hadde skjedd?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*S3t-mxId-uOiS1h9VPPzew.jpeg\" /><figcaption>Foto fra BigStock</figcaption></figure><h3>Bakteppet</h3><p>Vi kan takke Frederick Taylor (1856–1915) for mye. Han populariserte standardisering av arbeidsmetoder. Dette gav oss massiv økning i produksjonsvolum for fabrikker over hele verden. Med på lasset fikk vi også med oss ledelsesprinsipper for å maksimalisere effektiviteten:</p><ul><li>Finn beste måte å gjøre en oppgave på</li><li>Dokumenter beste måte å gjøre oppgaven på</li><li>Tren opp medarbeiderne til å gjøre oppgavene på beste måte</li><li>Ledere og medarbeidere deler ansvaret for løsning av oppgavene. Lederne skal løse oppgavene de er bedre egnet til, heller enn medarbeiderne</li></ul><p>En av utfordringene med disse, er at de har større fokus på å optimalisere enkeltroller heller enn systemet. I tillegg er ledelsesprinsippene er ofte blitt mistolket, eller brukt i feil kontekst. Mange mistolker dem fortsatt, over hundre år etterpå:</p><ul><li>en bruker rammeverket på arbeidsoppgaver det aldri var ment for å løse</li><li>en ser bort i fra de kontinuerlige treningsaspektet, dvs. dropper kontinuerlig forbedring</li></ul><p>Ta dette og bland det med tradisjonell avdelingsorganisering i underavdelinger som hver for seg er optimalisert for å være så effektive som mulig, dvs at alle i avdelingen til en hver tid jobber opp mot 100 prosent kapasitet, så har vi en standard bedrift. Deler av utfordringene med tradisjonell avdelingsorganisering har vi også erfart i SpareBank 1 IT.</p><h3>Avdelingsdrevet utvikling</h3><p>Vi hadde konseptavdeling, arkitektavdeling, prosjektavdeling, forvaltningsavdeling og driftsavdeling. Nye løsninger ble tatt fram i midlertidige prosjektteam, hvor utviklere var leid inn kun med tanke på å utvikle den ene løsningen. Arkitekter støttet opp om prosjektteamet. Arkitektenes utfordring var mange. De var gjerne booket opp i flere prosjekter samtidig , de var få, og de var fullt ut prosjektfinanisert. Dermed fikk de sjelden mulighet til å dykke dypt ned i utviklingen — de måtte løpe til neste prosjekt.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/300/1*xjCIq4ThHVdbvTfYM95IEg.png\" /><figcaption>Avdelinger med forskjellige mål — et system optimalisert for konflikt</figcaption></figure><p>Når løsningen var ferdig kodet og testet, ble den overlevert til forvaltningsteamet. Dette tok gjerne flere uker, siden koden sjelden var i henhold til standard, og måtte rettes og retestes før handoveren ble godkjent.</p><p>Denne måten å jobbe på førte til lav tillit mellom avdelingene, og fremmedgjøring for de som jobbet i dem med de aktuelle løsningene.</p><h3>Mikrotjenestene gav oss team</h3><p>Som så mange andre, hadde også vi en stor monolitt som alle de nye løsningene ble merget inn i. Vi fikk større og større utfordringer med å levere i monolitten, og dette medførte at vi startet et arkitekturprosjekt i 2012 for å bryte den opp i flere mindre tjenester — la oss kalle dem mikrotjenester. Da vi gjorde dette, bestemte vi oss for å bruke verdikjedeinngangen for å finne fornuftige deler å dele monolitten opp i.<a href=\"https://lightstep.com/blog/the-only-good-reason-to-adopt-microservices/\"> Da ble det også naturlig å lage team rundt verdikjedene</a>. Dette var starten på de kryssfunksjonelle teamene våre. Med stabile team organisert rundt verdikjedene, fant vi svar på mange av utfordringene vi hadde hatt med den avdelingsdrevne utviklingen.</p><h3>Egne utviklere</h3><p>Vi hadde hatt 100 prosent konsulentdrevet utvikling fram til 2012. Vi startet reisen med egne utviklere omtrent samtidig som vi startet reisen med microtjenester. I starten var vi totalt omtrent 50 personer som jobbet sammen i et fåtall team og omtrent ti av oss var ansatte utviklere og testere. Vi jobbet sammen, og hadde hyppige avdelingsmøter sammen.</p><p>Entusiasmen var høy. I tillegg til å få en mer moderne arkitektur, hadde vi skapt oss et rammeverk som gjorde at vi kunne skalere opp til å støtte flere verdikjeder — og dermed også flere team. Det gjorde vi. I 2017 var vi blitt 15 team.</p><p>Samtidig hadde vi ikke evnet å rekruttere egne utviklere i et like høyt tempo. i 2017 var vi gått fra omtrent 10 til omtrent 25 fast ansatte utviklere. Brorparten av skaleringen var gjort med konsulenter.</p><h3>Oppsigelser</h3><p>I løpet av seks måneder vinteren 2017–2018 sa seks av utviklerne våre opp.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/967/1*01xfKd_jsaYqRRPp3BZXiw.png\" /></figure><p>Hva var det som hadde skjedd?</p><p>Det viste seg at vi hadde jobbet så mye med å skape optimale arbeidsforhold for de kryssfunksjonelle teamene våre, at vi hadde kastet ut babyen med badevannet.</p><p>I reisen fra et fåtall til da 15 team, ble utviklerne våre spredd tynnere og tynnere utover teamene. Med 25 utviklere på 15 team, så vil de fleste utviklerne enten være ensom som fast ansatt utvikler på teamet sitt, eller i beste fall har en utviklerkollega til i teamet. Den gangen vi var 10 stykker og et fåtall team, så vi hverandre og delte kaffemaskin hver dag. I 2017 var vi blitt 15 team spredd over tre etasjer. Vi traff ikke hverandre lenger. Utviklerkulturen vår var blitt anonym. Tilhørigheten var borte.</p><h3>Utviklerne går sammen</h3><p>Oppsigelsene gav oss en skikkelig vekker. Sluttsamtalene var entydige. De som sluttet, følte liten tilhørighet til SpareBank 1 og var ikke fornøyd med den faglige utviklingen sin.</p><p>Sommeren og høsten 2018 la vi opp til en rekke grep for å snu dette helt om. Vi ville skape et skikkelig bra fagmiljø med mye sosial trygghet og mye humør. Et sted det er godt å være.</p><p>Vi gjorde to fundamentale grep:</p><ul><li>Vi satte opp utviklerne som en egen fagavdeling. Vi hadde tidligere vært organisert sammen med flere andre disipliner</li><li>Vi innførte ukentlig fagdag. Du kan lese mer om fagdagen vår <a href=\"https://medium.com/sparebank1-digital/torsdag-er-den-nye-lørdagen-f547e55aadd3\">her</a></li></ul><h3>Fagavdelinger + kryssfunksjonelle team = sant</h3><p>For å bygge sosial trygghet og sosial tilhørighet i en hverdag hvor en jobber i kryssfunksjonelle team, er fagavdelingene våre blitt viktigere enn noen gang. I fagavdelingen har vi et fast møtepunkt. Der bygger vi kulturen vår, jobber sammen og blir bedre utviklere sammen. Vi mener dette er så viktig at vi bruker en hel dag hver uke på dette. Dette gir oss muligheten til å jobbe sammen på arkitekturutfordringer, ta kurs sammen, jobbe aktivt med blogg- og konferanseinnlegg, og jobbe med personal, rekrutterings- og brandingsaktiviteter. Ved å være sammen og jobbe sammen med disse aktivitetene, skaper vi også sosial tilhørighet og trygghet. Vi skaper utviklerkulturen vår.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*F2JCCCDlIjGjFxcVhjT2Gw.jpeg\" /><figcaption>Fra standen vår på JavaZone.</figcaption></figure><h3>Faggruppene våre</h3><p>I tillegg til det strategiske kompetansearbeidet som foregår i fagavdelingene, gjør vi taktisk og operativt kompetansearbeid i faggruppene våre. Her er også konsulentene med, og de går gjerne på tvers av fagavdelinger. Vi har faggrupper for en rekke fagområder. Eksempler er teamledelse, applikasjonsarkitektur og sikkerhet.</p><h3>Shift left holder ikke</h3><p><a href=\"https://www.google.com/search?q=shift+left\">Shift left</a> er en trend som peker på at en skal flytte en rekke aktiviteter som tidligere typisk dukket opp sent i utviklingsprosessen, for eksempel test og sikkerhetsarbeid, tidligere i prosessen. Vi mener at dette på langt nær er nok for å skape en effektiv utviklingsprosess.</p><p>Du skal ikke bare “shift left” — du skal “rotate left”. Du skal bevege deg fra en horisonal avdelingsstruktur med handovers og ressursoptimalisering, til en vertikal verdikjedeorientert struktur, med kryssfunksjonelle team som jobber flytoptimalisert.</p><p>Vi må dyrke kulturen og den faglige tilhørigheten. Dette gjør vi i fagavdelingene og faggruppene våre. Samtidig er det i verdikjedene forretningsverdiene skapes. Da er de vi må optimalisere, og i de vi må jobbe.</p><p>Synes du dette var interessant, så pratet Jostein Emmerhoff og jeg mye mer om dette teamet på JavaZone 2019. Foredraget finner du <a href=\"https://www.pscp.tv/javazone/1MYxNPRBDOnGw?t=2m59s\">her</a>.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d4596a33ea89\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/utvikleravdelingen-er-d%C3%B8d-lenge-leve-utvikleravdelingen-d4596a33ea89\">Utvikleravdelingen er død! Lenge leve utvikleravdelingen!</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Vidar Moe"}},{"node":{"title":"Monorepo med Git och Maven: så fick vi det till!","link":"https://medium.com/sparebank1-digital/monorepo-med-git-och-maven-s%C3%A5-fick-vi-det-till-4fe01de16a1e?source=rss----e3c741b0efee---4","content":{"encoded":"<p>I SpareBank1 Utvikling har vi tagit i bruk ett monorepo för vår nya generation med appar i digitalbanken. Vi har utgått från verktyg som vi känner gott från tidigare: Git, Maven och Jenkins. Detta är verktyg som i stor grad är mer tillpassade får multirepo än monorepo.</p><p>Vi har tagit fram ett <a href=\"https://github.com/SpareBank1/monorepo-sample\">exempel-githubrepo</a> som visar hur vi har arbetat runt många av de utfordringarna som kommer särskilt från bruk av Maven och Jenkins. Repot visar också hur <a href=\"https://bazel.build\">Bazel-byggsystemet</a> kan användas som ett mer monorepo-native alternativ till Maven.</p><blockquote>Mer om monorepo kommer på JavaZone 2019: <a href=\"https://2019.javazone.no/program/eb8bc683-ceaf-4baf-82ee-d7b72960a955\">Monorepo med Git og Maven — hvordan lære gamle hunder ny triks</a>, 11 september kl 13:00 i rum 2.</blockquote><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Qxz_AwMSypWEHpIIwcCmzQ.jpeg\" /><figcaption>Bild av <a href=\"https://pixabay.com/sv/users/StartupStockPhotos-690514/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=593313\">StartupStockPhotos</a> från <a href=\"https://pixabay.com/sv/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=593313\">Pixabay</a></figcaption></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4fe01de16a1e\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/sparebank1-digital/monorepo-med-git-och-maven-s%C3%A5-fick-vi-det-till-4fe01de16a1e\">Monorepo med Git och Maven: så fick vi det till!</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Jonas Nordstrand"}}]}}}