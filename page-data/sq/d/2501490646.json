{"data":{"allFeedsb1Digital":{"edges":[{"node":{"title":"Hvordan hypoteser og små seire kan skape en vinnerkultur (Del 1/3)","link":"https://medium.com/sparebank1-digital/hvordan-hypoteser-og-sm%C3%A5-seire-kan-skape-en-vinnerkultur-del-1-3-5263fee6675c?source=rss----e3c741b0efee---4","content":{"encoded":"<p><em>Noe av det vanskeligste med å bygge produkter er det konstante spørsmålet: Gjør vi de riktige tingene nå, eller burde vi skifte fokus? Denne artikkelen er del 1 av en 3-partsserie der vi deler våre erfaringer med å gi teamet fullt eierskap til hva vi skal prioritere.</em></p><p><em>Del 1: Hvorfor hypotese-basert utvikling (du er her)<br>Del 2: Organisering av små teams i stor organisasjon<br>Del 3: Erfaringer på hypotesearbeidet og måling av suksess</em></p><h3><em>Hvorfor hypotese-basert utvikling?</em></h3><p>Jo flere bøker og artikler jeg leser om optimalisering og bygging av produkter, jo mer komfortabel blir jeg med å si at jeg vet ikke hva den perfekte måten er.</p><p>Med all sannsynlighet er det en all-inclusive buffett som bruker litt av scrum, agilt, sprint eller annet — basert på hva slags produkt og team du har. Med andre ord som en slags cabaret, bare i positiv forstand.</p><p><strong>Selv om metodene for å bygge et produkt er mange, er prinsippene få:</strong></p><ol><li>Du har et produkt du vil gjøre bedre.</li><li>Da bør du ha noen mål du vil oppnå.</li><li>For å nå målene bør du ha noen flinke folk som kan bygge/forbedre produktet.</li><li>Hvis alt går bra så oppnår de flinke folkene målene, og produktet blir bedre.<em> PS: gitt at målene er gode, folkene har det gøy og den psykologiske tryggheten gjør at man kan ha </em><a href=\"https://medium.com/sparebank1-digital/datadrevet-og-kundeorientert-utvikling-sa-du-9a18e89ba416\"><em>ambisiøse eksperimenter innenfor trygge rammer.</em></a></li></ol><p>I snart ett år har teamet jeg er den del av jobbet hypotesedrevet. Vi har prøvd masse, feilet mye, vunnet mer og kommet med utrolig gode løsninger.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6iqlnF5TGKxxhUjgXb3vsw.jpeg\" /><figcaption>Eksempel på hypotese vi testet der forbedring av tekst skulle øke trafikk inn til Mobilbanken fra nettsidene på mobil. Resultatet var 23% økning i klikk, som er veldig bra.</figcaption></figure><h4>Hva er en hypotese?</h4><p>En hypotese er en gjetning på at en endring man gjør, vil resultere i noe. Nedenfor kan dere se et bilde der vi testet å endre tekst, som vi trodde ville resultere i at flere klikket på det vi ville de skulle trykke på.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/530/1*ywzE9bTlSSD8_D8b2vDf4A.png\" /><figcaption>En hypotese vi testet, med læringen vi gjorde under.</figcaption></figure><p>Det vakre med å jobbe hypotesebasert er at man vet <em>egentlig</em> ikke hvordan en endring vil bli. Man kan gjøre en antagelse, basert på tidligere kunnskap og (helst) analyse, men det er egentlig det.</p><p>Det er først når vi kan analysere dataen at vi vet resultatet. Gikk hypotesen som vi ønsket er det flott fordi da ble produktet bedre. Var hypotesen feil er det bra fordi da har vi lært. <strong><em>win-win</em></strong>.</p><p>Siden vi er 15 banker kan vi teste hypotesene rett i produksjon for 2–3 banker av gangen. En stor luksus som minimerer risikoen, men gir oss reel data. Bankene synes også det som regel er veldig kult å få teste ut nye ting på sine sider.</p><h4>Vurderte vi andre løsninger enn hypoteser?</h4><p>Det viktigste for oss når vi diskturte hvordan vi skulle jobbe var ikke nødvendigvis hvilken metoder vi skal bruke, men hva er det vi ønsker og har lært:</p><p>a) Vi har lært at <strong>OKR er ikke noe vi kan gjøre i ny og ne</strong>. Vi må få opp et rammeverk der folkene kan jobbet fokusert i en lengre periode mot våre mål. (<a href=\"https://medium.com/sparebank1-digital/ikke-nok-et-j%C3%A6vla-statusm%C3%B8te-2d72284897c3\">her kan du lese mer om hva OKR er</a>)</p><p>b) Vi vil at <strong>teamet skal ha eierskap til nettsidene</strong> (produktet vårt) og målene vi har, så de selv kan bestemme hva vi burde gjøre.</p><p>c) Vi vil at <strong>produktet vårt skal være det beste for våre brukere</strong>, som er store deler av norges befolkning.</p><p>b) <strong>Vi vil at folk skal ha det gøy på jobb!</strong> Dette høres kanskje flåsete ut for noen, men vi bruker mye tid av våre liv på en jobb. Vi jobber med individer som er smarte, har følelser, egne mål og ambisjoner samt ønsker over hva de vil gjøre på jobben. Vårt produkt er et produkt som konstant skal forbedres gjennom tiden, og jo lengre vi kan holde på en god kjerne av mennesker jo bedre. Med andre ord, vi er ikke i en sprint, men et raskt maraton der vi sprinter noen ganger.</p><p>Vi har prøvd å bruke hypoteser sporadisk, men det er vanskelig å gjøre ordentlig hvis man ikke har systemet for oppfølgning. I en kombinasjon med at vi fikk to dyktige designere med hypoteseerfaring på teamet og at vi så at andre selskaper og team har suksess med hypotesearbeid, valgte vi å teste dette ut.</p><h4>Grunnlaget for hypotesearbeidet</h4><p>Det varierer hva slags produkt man har, men <a href=\"http://sparebank1.no\">sparebank1.no</a> har et veldig bredt ansvarsområde. Stort sett alle forretningsområder i SpareBank 1 treffer nettsidene på en eller annen måte. Skulle vi derfor prøvd å fikse alt for alle hele tiden, fikser vi ingenting.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*gqb_qiqZFIc7jb0q_8FlPw.jpeg\" /><figcaption>OKR og hypotesearbeid er ikke alt vi gjør, men det er noe av det viktigste vi gjør.</figcaption></figure><p>Å ha en solid forankring i et stort firma som <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> er viktig. Hadde alle team laget sine egne løsninger basert på subjektive meninger om hva som er viktigst for deres produkt, ville brukeren fått en fragmentert brukeropplevelse.</p><p>Det som foreløpig har fungert for oss er å sette <a href=\"https://medium.com/sparebank1-digital/fredag-er-for-feiring-382ebf55734f\">OKR</a> (Objective Key Results) basert på ett forretningsområde (f.eks. <a href=\"https://www.sparebank1.no/nb/bank/privat/daglig-bruk.html\">daglig bruk</a> som vi kaller det), som varer en viss tid. I det området har man kunne presentere 3 store problemstillinger, og ut ifra det sette OKR som et team.</p><p>Hypoteseteamet har da klare mål som sitt anker. Det gjør at de kan velge hva de skal jobbe med, men kanskje viktigere: ha en grunn til å <a href=\"https://medium.com/sparebank1-digital/sayonara-internet-explorer-745cc5ac896f\">nedprioritere ting som ikke passer til det vi prøver å oppnå</a>.</p><p><strong>Om litt kommer del 2 av 3 der jeg skriver om organisering av små teams i stor organisasjon.</strong></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=5263fee6675c\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/hvordan-hypoteser-og-sm%C3%A5-seire-kan-skape-en-vinnerkultur-del-1-3-5263fee6675c\">Hvordan hypoteser og små seire kan skape en vinnerkultur (Del 1/3)</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Lasse Olsen"}},{"node":{"title":"En god og ansvarlig skyreise","link":"https://medium.com/sparebank1-digital/en-god-og-ansvarlig-skyreise-a887978bddcf?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Skyteknologi har blitt den foretrukne måten å realisere og levere tjenester på for de fleste selskap. Nye teknologiselskaper etableres i skyen og benytter skyteknologi fullt ut, mens etablerte selskaper gradvis går over til å realisere og levere sine eksisterende tjenestene gjennom sky.</p><p><em>Dette er en artikkelserie hvor vi tar for oss hvordan vi i SpareBank 1 Utvikling beskriver hvordan vi migrerer systemer til sky og hvordan dette påvirker organisasjonen. I første del ser vi på den organisatoriske forankringen og endringene dette kan medføre.</em></p><p>Egenskaper og fordeler med sky gjør at teknologisk innovasjon og tjenesteutvikling i stadig større grad foregår i sky, og konsum av skytjenester blir derfor en forutsetning for å få tilgang til de nyeste produktene og tjenestene.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/728/1*eW4hioAhi1QjfXu4MJxycQ.png\" /></figure><p>Vi i SpareBank 1 Utvikling har lang erfaring med sky i isolerte caser, for eksempel mCash (en forløper til Vipps), Spleis og Spink, men at dette ikke har medført en bredere overgang til sky.</p><p>Vi har nå startet en større migreringløp hvor vi ser på hvordan vi kan migrere flere av våre egenutviklede løsninger ut i skyen.</p><p>I tillegg til egenutviklede løsninger benytter vi allerede SaaS løsninger (Software som en tjeneste), hvor vi bruker ulike enkelttjenester til spesifikke oppgaver. En del av dette er at vi har en bred utrulling av Microsoft 365 porteføljen til de ulike underselskapene.</p><p>Hovedfordelene vi ser ved å gå til sky er:<br>• Sikre konkurransefortrinn gjennom tilgang til innovasjon, nye tjenester og økt funksjonsrikdom.<br>• Øke endringsevne og fleksibilitet gjennom tjenestekonsum og bruk av arkitektur og plattformer bygget for og i skyen. <br>• Redusere ledetid ved å utnytte egenskapene ved skyen og rendyrke automatisering.<br>• Oppnå kostnadsoptimalisering gjennom effektive og skalerbare plattformer.</p><p><strong>Tydelig retning og forankring i ledelsen</strong><br>Sky er en reise og ikke bare flytt av tjenester fra en leverandør til en annen. Ved å gå ut i sky åpner man for en endringsreise hvor det er viktig at alle er med.</p><p>Å gå til sky er en langsiktig reise og det viktig at man har en tydelig retning og god forankring i hele organisasjonen slik at man har ett felles målbilde som man står sammen i over tid. SpareBank 1 er en allianse og det er også viktig for oss at de ulike bankene i alliansen også har en grunnleggende forståelse for hva vi gjør i sky og hvordan det påvirker deres bank.</p><p>I SpareBank 1 Utvikling har vi etablert en skystrategi hvor vi på et overordnet plan har definert hvordan man benytter sky i ulike scenarioer for ulike tjenestetyper. Denne er etablert som en del av våre felles strategier og håndtert i vår kvalitetshåndbok.</p><p>Skystrategien definerer ett sett strategiske prinsipper som vi benytter i vår tilnærming:<br>• Vi vurderer alltid skyløsninger som et reelt alternativ.<br>• Vi tilpasser organisering og løsninger til sky, ikke omvendt.<br>• Vi foretrekker tjenestekonsum og ferdige løsninger.<br>• Vi etablerer skykapabiliteter iterativt, basert på forretningsbehov.<br>• Vi har finansieringsmodeller som harmonerer med sky.<br>• Vi har et bevisst forhold til lock-in og hvilken risiko vi aksepterer.</p><p><strong>Autonome team</strong><br>Autonome team er ikke noe som springer ut av en skyreise, vi i SpareBank1 Utvikling har allerede gode innarbeidede autonome team. Men det vi ser at teamene blir mer effektive og selvstendige med å ta i bruk de løsninger og teknologier som ligger i skyen.</p><p>Erfaringen er også at det er enklere for driftsteamene å bli mer effektive når man migrerer til sky. Bakgrunnen for dette er at det er enklere å ta i bruk muligheter som infrastruktur som kode, hyppige leveranser og full testautomatisering.<br><br><strong>Kompetansebygging og forståelse for sky er viktig. <br></strong>For at alle skal få en god forståelse for sky så ha vi introdusert skytimen hvor alle kan delta. Her har vi presentasjoner om mulighetene og utnyttelse i sky. Her kommer vi også til å benytte eksterne presentatører til å presentere hvordan de ser fordelene i deres utnyttelse av sky.</p><p>De som arbeider direkte med sky har hyppige uformelle show&amp;tell-møter hvor de går gjennom spesifikke temaer og løsninger</p><p>I tillegg har vi godt samarbeid med skyleverandørene hvor vi får fortløpende støtte og assistanse til kompetanseheving slik som egne hackathons, 1:1 møter med produkteksperter og kursing.</p><p><em>I neste artikkel vil vi ta for oss hvordan vi utvider forståelsen og kompetansen sett i lys av våre tjenester og organisasjon.</em></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a887978bddcf\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/en-god-og-ansvarlig-skyreise-a887978bddcf\">En god og ansvarlig skyreise</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Vidar Hagen"}},{"node":{"title":"Plag din egen webapp","link":"https://medium.com/sparebank1-digital/plag-din-egen-webapp-47696581fb7?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Sikkerhetstesting må ikke utføres av en med sikkerhet i tittelen. Hvordan kan en utvikler gjøre litt selv?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*sfFG3o2DIwQau4H-mcrwQw.jpeg\" /><figcaption>Photo by <a href=\"https://unsplash.com/@seanlimm?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Sean Lim</a> on <a href=\"/photos/B3l0g6HLxr8?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></figcaption></figure><p>I utviklingsavdelingen er vi to personer som jobber fulltid med sikkerhet, sammen med flere hundre utviklere. Min kollega fortalte om at <a href=\"https://medium.com/sparebank1-digital/er-du-utvikler-gratulerer-med-sikkerhetsjobben-2ee00019f978\">hvordan utviklere kan begynne å tenke sikkerhet</a>, jeg ønsker å fortelle litt mer om testing og verktøy.</p><p>Du kommer langt hvis du starter med å spørre deg selv “Hvordan kan jeg få denne applikasjonen til å gjøre ting den ikke skal?”</p><h3>Et kart over applikasjonssikkerhet</h3><p>Mange utviklere har blitt kjent med OWASP og deres mest kjente verk, <a href=\"https://owasp.org/www-project-top-ten/\"><em>Top Ten</em></a>. Det forteller om de ti mest utbredte sårbarhetene i webapplikasjoner, en god start når du ønsker å lære mer om sikkerhet.</p><p>OWASP har en rekke prosjekter som går dypere enn <em>Top Ten</em>, deriblant <a href=\"https://owasp.org/www-project-web-security-testing-guide/\"><em>Web Security Testing Guide</em></a>. Dette er et godt oppslagsverk som beskriver sårbarheter og hvordan du skal teste for dem. Bare ikke bruk den som enda en <a href=\"https://medium.com/sparebank1-digital/evinnelige-og-forbanna-sjekklister-nekrolog-864a38f58461\">evinnelig og forbanna sjekkliste</a>, da går den fort i skuffen.</p><h3>Et enkelt verktøy</h3><p>Mest sannsynlig har du allerede et verktøy for enkel sikkerhetstesting. Webapplikasjoner skrevet i JavaScript er utbredt og <a href=\"https://developers.google.com/web/tools/chrome-devtools\"><em>Chrome DevTools</em></a> lar deg studere oppførselen nærmere. Kombinerer du verktøyet med et kritisk blikk, så kan du fort finne informasjon på avveie.</p><p>Har du Chrome installert er det enkelt å komme i gang. I menyen klikk <em>View → Developer → Developer Tools</em> og verktøyet er klart.</p><p>Network-fanen gir deg en oversikt over trafikken som genereres av en webapplikasjon, dette kan fort gullgruve med informasjon. Alt fra lastingen av selve siden til ressurser som stilsett og bilder fanges opp her.</p><p>Den mest interessante trafikken som genereres av webapplikasjoner, er ofte XHR-kallene. Denne trafikken genereres av klienter som kommuniserer med et API. For eksempel en React-applikasjon som kommuniserer med et API skrevet i Kotlin.</p><p>Kanskje finnes det sensitiv informasjon gjemt i kallene? Da sitter du på et mulig viktig funn.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*co_KGB7vt06UaDpOHHlMdA.png\" /><figcaption>Network-fanen i Chrome DevTools som viser XHR-trafikk.</figcaption></figure><p>Det er mye data tilknyttet webapplikasjoner og noe lagres på klienten. Application-fanen lar deg se nærmere på disse, her finner du cookies, session storage og local storage. Ofte finner du sensitiv informasjon, andre ganger finner du verdier som kan endres som igjen kan gi deg nye privilegier.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8mOpYbDBrMPMwxAC4hrF5w.png\" /><figcaption>Application-fanen i Chrome DevTools som viser en oversikt over cookies.</figcaption></figure><h3>Et kraftigere verktøy</h3><p>Jeg startet sikkerhetsreisen min med utviklerverktøyene og fikk senere behov for en større og kraftigere verktøykasse. <a href=\"https://portswigger.net/burp\">Burp Suite</a> fra PortSwigger er en samling av verktøy for å gjøre sikkerhetstesting mer effektiv, dette har blitt mitt viktigste verktøy i hverdagen.</p><p>Dette er en proxy som legger seg mellom nettleseren og nettet, som lar den logge og manipulere all trafikk. Den innebygde utgaven av Chromium lar deg enkelte komme i gang, samtidig som du fortsatt har tilgang til <em>Chrome DevTools</em>.</p><p>Ofte ønsker vi ikke at absolutt all trafikk logges i Burp. Heldigvis kan vi sette et scope slik at kun sidene vi er interessert i logges. Vi kan i ettertid inspisere og arbeide med den loggede trafikken, det er her kraften i Burp ligger.</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fm80J4-QSk3o%3Flist%3DPLjqNTTCRbH7lWOfhsRPHrimtKakQY8W_g&amp;display_name=YouTube&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dm80J4-QSk3o&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fm80J4-QSk3o%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"854\" height=\"480\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/32da9b079d11e9d305903fbcb15cfd1b/href\">https://medium.com/media/32da9b079d11e9d305903fbcb15cfd1b/href</a></iframe><p>Som sikkerhetstester ønsker jeg ofte å endre på headere og annen last for å se hvordan en webapplikasjon reagerer, dette kan gjøres enkelt ved hjelp av <em>Repeater</em>.</p><p>Jeg starter ofte med å finne en forespørsel i loggen, denne sender jeg til <em>Repeater</em> som lar meg gjøre endringer på forespørselen før jeg sender den på nytt. Det er en veldig enkel handling, men <em>Burp</em> lar meg gjøre dette veldig effektivt.</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fjh4W0GkeqH0%3Flist%3DPLjqNTTCRbH7lWOfhsRPHrimtKakQY8W_g&amp;display_name=YouTube&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Djh4W0GkeqH0&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fjh4W0GkeqH0%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"854\" height=\"480\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/9bf5ecece90d6e6a8151c0acf9b9c76f/href\">https://medium.com/media/9bf5ecece90d6e6a8151c0acf9b9c76f/href</a></iframe><p>Om man vil teste flere forskjellige verdier vil det være tungvint å legge de inn manuelt en etter en i <em>Repeater</em>. Heldigvis kan verktøyet <em>Intruder</em> hjelpe med å sende hundrevis av forespørsler på kort tid. Alt man trenger er en ordbok med alle variasjonene man vil teste, <em>Intruder</em> ordner resten og sender hundrevis av ulike forespørsler på veldig kort tid.</p><p>Gjennom konfigurasjon velger jeg hvor jeg ønsker å legge inn de ulike lastene eller om det er noen mønstre som det skal søkes etter.</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FxMaRF2RAoyQ%3Flist%3DPLjqNTTCRbH7lWOfhsRPHrimtKakQY8W_g&amp;display_name=YouTube&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DxMaRF2RAoyQ&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FxMaRF2RAoyQ%2Fhqdefault.jpg&amp;key=d04bfffea46d4aeda930ec88cc64b87c&amp;type=text%2Fhtml&amp;schema=youtube\" width=\"854\" height=\"480\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/05209a7496aea86b47731af8ce398828/href\">https://medium.com/media/05209a7496aea86b47731af8ce398828/href</a></iframe><p><em>Burp Suite</em> byr på veldig mye mer funksjonalitet, men verktøyene jeg har snakket om er de viktigste. Verktøyene er tilgjengelige <em>Burp Suite Community Edition</em> som er tilgjengelig gratis fra PortSwigger.</p><p>Den betalte utgaven inneholder en skanner, men ikke fyr av automatiske verktøy før du forstår hvordan testing gjøres manuelt. Samtidig risikerer du å teste ting du ikke har lov til å teste.</p><h3>Oppsummering</h3><p>Det skal ikke mye til for å gjøre enkel sikkerhetstesting selv.</p><ol><li>Vær ondsinnet og tenk over hvordan applikasjonen ikke skal brukes.</li><li>Ta med kart og kompass levert av OWASP.</li><li>Hent frem en proxy og gi applikasjonen en veldig kjip dag.</li></ol><p>Happy hackin’!</p><p>Ressurser brukt i demo:</p><p><a href=\"https://portswigger.net/burp/communitydownload\">Burp Suite Community Edition<br></a><a href=\"https://owasp.org/www-project-juice-shop/\">OWASP Juice Shop<br></a><a href=\"https://github.com/danielmiessler/SecLists\">SecLists</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=47696581fb7\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/plag-din-egen-webapp-47696581fb7\">Plag din egen webapp</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Adrian Alexander Eriksen"}},{"node":{"title":"Har du rom for forbedring?","link":"https://medium.com/sparebank1-digital/har-du-rom-for-forbedring-d56a23290420?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Du har kanskje spilt dette spillet som barn?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/259/1*XvE3469tjTUspcCWFDyPPQ.png\" /><figcaption>En 10x10cm plastplate med brikker du kan skyve rundt på. Illustrasjon fra Slack av Tom DeMarco</figcaption></figure><p>Ved hjelp av den ledige plassen flytter du rundt på brikkene for å sortere dem i den rekkefølgen du vil.</p><p>For å dra det litt nærmere vår virkelighet, så kan vi tenke på den ledige plassen som noen ledige pulter i lokalet i vårt, eller kanskje et par utviklere som har ledig kapasitet?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/257/1*AWPyGnOR4SLrq7iaGR3aKg.png\" /><figcaption>Ved å bruke også den ledige plassen blir vi 100 prosent effektive! llustrasjon fra Slack av Tom DeMarco</figcaption></figure><p>Fyller vi helt opp blir vi utrolig effektive . Vi utnytter absolutt all kapasiteten vi har.</p><p>Samtidig mister vi helt muligheten til endring og forbedring.</p><p>Vi har ikke noe handlingsrom til å håndtere endrede prioriteringer og forbedringer uten at vi samtidig må stoppe andre aktiviteter. Kundeverdien av aktivitetene vi stopper er null, helt til vi får gjort dem ferdig. Kanskje. Siden. En gang.</p><p>For å kunne jobbe godt med forbedringer og endrede prioriteringer, trenger vi slakk i organisasjonen.</p><p>Det kan være lettere å forstå mekanismene som ligger bak denne observasjonen med et generelt eksempel? Avsnitt ni <a href=\"http://www.polyhedrika.com/2-uncategorised/12-process-simulation-2\">her</a>, viser at i et team med varierende antall oppgaver og kompleksitet, så <strong>må</strong> vi ha slakk i teamet for å <a href=\"https://en.wikipedia.org/wiki/Lead_time\">optimalisere time to market </a>for det vi holder på med.</p><h3>Hvordan lager vi slakk da?</h3><p>Ja vel. Men hvordan i all verden skal vi lage slakk da?</p><p>Vi kan lage slakk på flere måter:</p><p>Ikke alloker folk fulltid på en oppgave. Fulltid er uansett en illusjon, i og med at folk skal på ferie, blir syke, og skal være med på en fastelavensfeiring i barnehagen innimellom.</p><p>Ikke lås omfang for oppgavene. Mye av det mange av oss jobber med, er utvikling av løsninger som aldri har vært laget før i akkurat vår kontekst. Med mindre det er løsninger som må på plass innen en viss dato grunnet for eksempel lovregulering, så planlegg med slakk i leveransene ved hjelp av variabelt omfang. Kan vi levere litt som skaper verdi nå, så er det nesten alltid bedre enn å levere mer som skaper verdi siden.</p><p>Ved å planlegge med slakk i leveransene får du også en mye bedre og åpnere håndtering av alt det som kommer til å skje de neste månedene, som du ikke har den fjerneste anelse om i dag.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/295/1*cIKfUiRkzaULhvk96iUOuA.png\" /><figcaption>Noe nesten ingen av oss hadde den fjerneste anelse om for litt over et år siden.</figcaption></figure><h3>Slakk gir rom for forbedring</h3><p>Med slakk gir vi oss selv også rom til å drive med forbedringsarbeid. Dette kan vi gjøre på flere måter og på flere nivå.</p><p>Slakken vi har i organisasjonen eller teamet, kan vi bruke til å jobbe med forbedring både direkte og indirekte i det daglige arbeidet. Et eksempel kan være å forbedre en enhetstest som ikke er direkte koblet til oppgaven vi løser, eller ta oss tid til å tilgjengeliggjøre den smarte nye funksjonaliteten vi har laget til alle, istedet bare for oss selv eller teamet vårt.</p><p>Med slakk kan også vi bygge forbedringsarbeid inn i måten vi arbeider på. Vi kan kjøre forbedringsprosesser som retrospektiver, A3 og post mortems. Forbedringsoppgaver vi finner der, kan vi ta inn som en del av det daglige arbeidet.</p><p>Har vi tilstrekkelig med slakk i organisasjonen, kan vi kjøre større forbedringsinitiativer ved å la folk vi normalt sett ville brukt på ordinært arbeid, jobbe med forbedringsinitiativ i en periode. Siden det er planlagt med slakk i utgangspunktet, vil ikke dette påvirke de planlagte leveransene.</p><p>Slakk kan vi også bruke til refleksjon og tankearbeid. Sett av tid til å reflektere over oppgavene du jobber med. Løser vi oppgavene på rett måte? Løser vi de riktige oppgavene? Finnes det andre måter vi kan jobbe bedre sammen på?</p><p>I bransjen vår er kontinuerlig kompetanseheving omtrent obligatorisk for å kunne levere godt over tid. Dette kan det derfor også være lurt å sette av fast tid til. Planlegg med at folk trenger å bruke tid på kompetanseheving. Kanskje kan vi til og med slå to fluer i en smekk, og bruke kompetansehevingen som teamaktivitet og kulturbygger også?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*U7OwtkqWl9zwtUGTz4xrJQ.png\" /><figcaption>Jobber vi med oppgavene våre hele tiden, oppfattes vi fort som veldig effektive.</figcaption></figure><p>I SpareBank 1 Utvikling jobber vi med å skape stadig bedre flyt i både produktutviklingen vår og forbedringsarbeidet vårt, med bruk av slakk. Vi har skrevet flere artikler tidligere om hvordan dette fokuset har gjort kontinuerlig forbedring til en av bærebjelkene i produktutviklingen vår. Det kan du lese mer om <a href=\"https://medium.com/sparebank1-digital/det-skal-v%C3%A6re-lett-%C3%A5-gj%C3%B8re-rett-del-1-947ff830f81f\">her</a>.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d56a23290420\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/har-du-rom-for-forbedring-d56a23290420\">Har du rom for forbedring?</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Vidar Moe"}},{"node":{"title":"Jobber du med det du egentlig vil?","link":"https://medium.com/sparebank1-digital/jobber-du-med-det-du-egentlig-vil-55155d815502?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Om å være ærlig med seg selv.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FDQwsRiByy01xtCDH1JAtA.jpeg\" /><figcaption>Photo by <a href=\"https://unsplash.com/@freetousesoundscom?utm_source=medium&amp;utm_medium=referral\">Free To Use Sounds</a> on <a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><p>Jeg har på ingen måter mistrivdes i mine tidligere jobber og har for det meste gledet meg til å gå på jobb. I nesten hele min yrkeskarriere har jeg jobbet med ledelse av utviklingsprosjekter og team. Inntil nylig var dette en naturlig karriere å bygge videre på.</p><p>Som nyutdannet fikk jeg meg en jobb som utvikler, men det tok ikke mer enn et par uker før jeg ble spurt om jeg kunne lede et prosjekt. Det virket jo som om jeg kunne passe til det? Sant nok, jeg passet til det. Jeg har passet til det i over 15 år, og jeg passer sikkert til det fremdeles, men jeg har endelig funnet ut at det er noe annet jeg heller vil gjøre.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/799/1*7JH1CfluH-WsFicBYD3kkw.png\" /><figcaption>Ekte stock photo av meg</figcaption></figure><p>Det kan ta tid å innse at man kanskje ikke lever livet fullt ut slik man egentlig vil. Det er mye lettere å bare la det skli som før og gjøre det man er vant til. Det som er innenfor komfortsonen og det som tilsynelatende er trygt.</p><p>Jeg har hele tiden følt jeg har jobbet med noe jeg er god til. Mestringsfølelsen jeg har hatt har vært med på å dra karrieren videre i samme retning. Men det handler ikke alltid om hva man er best til. Det handler like mye om hva man selv vil og hva som gir glede og energi i livet. Prioritering her ble vanskelig for meg fordi jeg rett og slett ikke turte å tenke nøye gjennom hva jeg gjorde og hva jeg egentlig ville. Det måtte modnes over tid, men til slutt var svaret innlysende. Svaret var selvsagt noe jeg alltid hadde visst. Jeg ville ikke jobbe med ledelse. Jeg ville jobbe som utvikler.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/503/1*RLP26HN30WTe9gprOR5U0Q.jpeg\" /><figcaption>memegenerator.net</figcaption></figure><p>Å velge en annen vei, i hvert fall så sent i karrieren, krevde en del mot fra min side. Jeg var ganske redd for hvilken vei høna skulle sparke. Jeg var n00b i git-kommandoer, rota til min første rebase og hadde aldri før har satt mine ben i emacs. Heldigvis så er det ofte slik at det man frykter mest ofte ikke skjer i virkeligheten. Så lenge man er tydelig på hva man kan og hva man må jobbe mer med, handler det ikke lenger så mye om “du er flink nok”. Jeg måtte tørre å ikke være så “flink”, våge å gå fra senior til junior, noe som ikke var lett. For noen er en slik endring enkelt å gjennomføre, og således vanskelig å sette seg inn i. Andre kjenner seg nok igjen og fikk kanskje noe å tenke på.</p><p>Å være modig er mye lettere når man har noen som støtter og heier på deg. I SpareBank 1 Utvikling følte jeg det var trygt å ta denne praten med min leder og sette i gang en prosess med å gjøre store endringer i karrieren. Jeg fikk også en fadder og mentor jeg kunne ringe til for å løse opp i rebase-floker og stille alle de dumme spørsmålene til. Uten å føle meg dum.</p><p>Åpenhet og god dialog er viktig. Man trenger å føle en trygghet rundt det å snakke åpent om hva man selv vil. Når jeg først turte å ta steget ble jeg kun møtt med interesse og støtte. Det var fokus på meg som menneske og hva jeg vil gjøre for å trives i min jobb og hvordan jeg kan best bidra med mine egenskaper.</p><p>Det er ikke mangel på studier som sier at organisasjoner som er gode til å hente ut det beste i sine ansatte og legger godt til rette for at hver enkelt får mulighet til å utvikle seg i den retningen man ønsker, lykkes bedre enn andre. Det er ingen tvil om at endringstakten har økt på de fleste fronter, noe som også øker behovet for å oppdatere seg med tanke på kompetanse. Spørsmålet er om behov og ønske om å bytte spor underveis i karrieren er et tema som stadig flere vil kjenne behov for?</p><p>Budskapet her er at du alltid har et valg og at dersom du ønsker deg nye oppgaver må du gjøre noe med det, selv om det koster en del å innrømme det. Husk at det spiller ingen rolle om du egentlig burde ha gjort noe med det for lenge siden. Det er aldri for sent. Det som betyr noe er at du tar mot til deg og gjør noe med det når det kjennes riktig. Det krever kanskje at du er dønn ærlig med deg selv, noe som ikke alltid er like lett. Men det er verdt det, jeg lover.</p><p>Hilsen en utvikler som trives særs godt med nye oppgaver og fokus.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=55155d815502\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/jobber-du-med-det-du-egentlig-vil-55155d815502\">Jobber du med det du egentlig vil?</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Jens-Christian Bjerkek"}},{"node":{"title":"Fredag er for feiring","link":"https://medium.com/sparebank1-digital/fredag-er-for-feiring-382ebf55734f?source=rss----e3c741b0efee---4","content":{"encoded":"<p>I SpareBank 1 Utvikling er vi på en spennende og lærerik reise innen målarbeid, der bl.a. bruk av <a href=\"https://no.wikipedia.org/wiki/OKR\">Objectives and Key Results (OKR)</a> har gitt gode resultater. En av grunnene til at OKR fungerer godt hos oss er rytmen Christina Wodtke anbefaler i boken <a href=\"https://www.amazon.com/Radical-Focus-Achieving-Important-Objectives-ebook/dp/B01BFKJA0Y/ref=sr_1_1?crid=2BDI36LHHRD8E&amp;dchild=1&amp;keywords=radical+focus&amp;qid=1605174054&amp;s=digital-text&amp;sprefix=radical+fo%2Cdigital-text%2C240&amp;sr=1-1\">Radical Focus</a>. Rytmen har vært viktig for å løse “set and forget”-utfordringen, der mål ikke blir del av det daglige arbeidet. Dette innlegget handler om den delen av rytmen som avslutter uken. Velkommen til “Friday wins”.</p><h3>Radical Focus-modellen</h3><p>Først noen ord om “Monday commitments”, møtet som kickstarter uken. Her samles hele teamet foran tavlen mandag morgen og spør seg selv “Hvordan ligger vi an i forhold til målene vi har satt oss?” og “Hva må vi ha fokus på denne uken for å nå målet?”. Gjennom denne diskusjonen blir teamet enige om de viktigste oppgavene. Kun disse havner på tavlen. Dette er oppgavene man forplikter seg til i felleskap, og som teamet strekker seg for å levere innen fredag.</p><p>“Fridays wins”-sesjonen handler om å feire det man har fått til og om å dele læring. Med en varm kopp kaffe, og gjerne med noe godt å bite i, samles teamet på slutten av uka for å fortelle hverandre om ting man har lykkes med.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/300/1*7zK5O3vfW41rG3l6MAYU7A.png\" /></figure><h3>Hadde vi for få markeringer?</h3><p>SpareBank 1 Utvikling kommer fra en sterk kultur for å løse problemer. I utgangspunktet et meget godt fundament for å ta hånd om utfordringene vi har ansvaret for. Ting som gikk bra underveis i arbeidet var det imidlertid begrenset med fokus på. En slik kombinasjon kan skape ubalanse i tilværelsen.</p><blockquote><em>“When teams are aiming high, they fail a lot. While it’s good to aim high, missing your goals without also seeing how far you’ve come is often depressing. That’s why committing to the Friday wins session is so critical.” — Christina Wodtke</em></blockquote><p>Fremveksten av hyppigere produksjonssettinger gjorde at misforholdet muligens ble større. En følge, av denne ellers gledelige utviklingen, var at det ble færre markeringer knyttet til tradisjonelle milepæler og leveranser. Prosjekter har typisk omfavnet viktigheten av å markere leveranser og måloppnåelse. Omfanget av den klassiske prosjektarenaen har imidlertid blitt gradvis redusert i vår organisasjon. Etter hvert som team gikk mer over mot kanban og kontinuerlig flyt, ble demo mer del av det daglige arbeidet og markering på slutten av hver Scrum-sprint borte. I sum kunne det nok tidvis fortone seg som en ørkenvandring på stadig jakt etter ambisiøse mål man ikke helt oppnådde, kombinert med jevnt tilsig av nye problemer å håndtere.</p><h3>Endret dynamikk</h3><p>Med introduksjon av “Friday wins”-sesjonen endret dynamikken seg. Vi startet å prate mer om det vi hadde oppnådd, og gjorde det med en fast rytme. Økt fokus på det som har gått bra har flere fordeler. Ved å gi det man lykkes med mer plass og anerkjennelse øker sannsynligheten for at det vil skje igjen. Atferdspsykologi omtaler dette som at “<a href=\"https://en.wikipedia.org/wiki/Reinforcement\">positive reinforcement</a>”<em> </em>anerkjenner og forsterker det som går bra.</p><blockquote><a href=\"https://www.aubreydaniels.com/infographics/positive-reinforcement-most-powerful-leadership-tool\"><em>“Positive reinforcement is the most powerful leadership tool” — Aubrey Daniels, (Daniels, 1982)</em></a></blockquote><p>I et ambisiøst miljø som jobber med å løse krevende utfordringer bidrar “Friday wins” til å vise oss selv at mye faktisk er oppnådd. Med “Friday wins”-møtet blir positive tilbakemeldinger bygd inn i prosessen, der hver uke avsluttes med en følelse av mestring og fremgang som tas med inn i helgen. Dette til tross for at en del ikke har gått slik vi håpet. Mandag er vi igjen klare for å løse utfordringer og kjempe med å ta de neste stegene gjennom uka.</p><p>Et annet positivt aspekt ved “Friday wins” er bidrag til trygghet i arbeidet. I boken <a href=\"https://www.amazon.co.uk/Fearless-Organization-Psychological-Workplace-Innovation/dp/1119477247\">The Fearless Organization</a> peker Amy Edmondson på viktigheten av at ledere legger til rette for en kultur der psykologisk trygghet er med på å etablere et klima som støtter opp om læring. Google fant i prosjekt Aristoteles at det <a href=\"https://rework.withgoogle.com/blog/five-keys-to-a-successful-google-team/\">viktigste kjennetegnet ved team som lykkes</a> er psykologisk trygghet. Med covid-19 pandemien kjennes dette viktigere enn noen gang, med behov for tilhørighet og trygghet fra hjemmekontoret.</p><blockquote><em>“…several benefits. One, you start to feel like you are part of a pretty special winning team. Two, the team starts looking forward to having something to share. They seek wins. And lastly, the company starts to appreciate what each discipline is going through and understands what everyone does all day.” — Christina Wodtke</em></blockquote><h3>Utfordringer</h3><p>En praktisk utfordring med “Friday wins” oppstår om ikke alle kan delta. I teamet jeg er medlem av benyttes ofte Slack for deling om man ikke har anledning til å være med. Rikelig med high fives og positive kommentarer sørger for at også de som var opptatt får med seg en god dose mestringsfølelse inn i helgen. En annen ting å tenke på er at arenaen ikke blir dominert av de ekstroverte. Ved å la ordet gå runden i teamet sikres at alle deler noe man har lykkes med.</p><p>Videre kan det være nyttig å understreke hva “Friday wins” ikke er. Hverken rapportering, avmelding av status eller problemer hører hjemme her. Dette kan være krevende å overholde, særlig i begynnelsen, men med litt trening blir det etter hvert naturlig at innholdet kun er det som har gått bra.</p><h3>Tro på å sammen klare det neste steget</h3><p>Er det god tidsbruk å avslutte uken i fellesskap med fokus utelukkende på det positive? I mitt team undervurderte vi verdien av å prate om tingene som går bra. Vi har erfart at fokus på det positive skaper kraft og tro på at man sammen vil klare å ta det neste steget. Det er mye som fortjener oppmerksomhet, uten at det nødvendigvis direkte har flyttet nøkkeltall. Resultatet er alltid stolthet over det vi har fått til sammen.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*OreL1Tx4WSO6nJ06\" /><figcaption>“Friday wins”-sesjon fra hjemmekontoret.</figcaption></figure><p>Slik runder “Friday wins” av uka med en kraftfull vitamininnsprøytning. Teamet tar med seg en mengde positiv energi inn i helgen, etterfulgt av velfortjent avkobling og restitusjon. Så enkelt, og så kraftfullt. Fredag egner seg definitivt for feiring.</p><p>PS! Vil du vite mer om hvordan Radical Focus-modellen fungerer? Les innlegget <a href=\"https://medium.com/sparebank1-digital/ikke-nok-et-j%C3%A6vla-statusm%C3%B8te-2d72284897c3\">“Ikke nok et jævla statusmøte!”</a> der et av utviklingsteamene i SpareBank 1 Utvikling oppsummerer sine erfaringer.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=382ebf55734f\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/fredag-er-for-feiring-382ebf55734f\">Fredag er for feiring</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Kristoffer Berg"}},{"node":{"title":"Hvordan har teamet det når alle er på hjemmekontor?","link":"https://medium.com/sparebank1-digital/hvordan-har-teamet-det-n%C3%A5r-alle-er-p%C3%A5-hjemmekontor-e4c6c511adb0?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Lenge før vi befant oss på hjemmekontor i mars hadde vi i SpareBank 1 Utvikling jobbet med å måle teamets helse. Noen team hadde kommet lengre enn andre og vi teamledere lærte kontinuerlig av hverandre. Arbeidet ble ekstra viktig nå når alle plutselig måtte jobbe hjemmefra. Hvordan ville “den nye normalen” påvirke oss?</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9JxIEzf_oaLEKw6zgX80QA.jpeg\" /><figcaption>Mars 2020 — tomme lokaler hos SpareBank 1 Utvikling</figcaption></figure><p>Jeg er teamleder for Team Betaling, ett av utviklingsteamene som leverer de digitale løsningene for SpareBank 1-bankene. Vi hadde siden juni 2019 hatt en del utskiftninger på teamet, så vi startet måling av teamets helse når alle de nye utviklerne var på plass. For å spare tid gjenbrukte vi spørsmål fra et annet team og rakk såvidt å komme i gang før pandemien traff oss.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/670/1*V_QyL0ZtTkO_gNflI6Cgmg.png\" /><figcaption>Helsesjekk for Team Betaling uke 5 og 11 — svaralternativer Ja=5, Tja=3 og Nei=1</figcaption></figure><p>Vi brukte mer tid på å diskutere hva spørsmålene betydde enn å reflektere rundt svarene som var gitt. Konklusjonen etter to helsesjekker var at vi måtte ha nye spørsmål. I retrospekt var det kanskje ikke den beste løsningen å arve spørsmål fra et annet team, men da kom vi i hvert fall i gang.</p><h4>Trygghet</h4><p>Vi visste det var viktig å bygge tryggheten i teamet slik Amy Edmondson snakker om i sin TED-talk <a href=\"https://www.youtube.com/watch?v=LhoLuui9gX8&amp;amp;feature=youtu.be\">Building a pshygologically safe workplace</a>. Det var også godt kjent at trygghet troner øverst etter Googles funn om hva som kjennetegner high performing teams gjennom prosjektet Aristotle.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/416/1*gRb0cyTPS7POcBhlEoX2mA.png\" /><figcaption><a href=\"https://rework.withgoogle.com/blog/five-keys-to-a-successful-google-team/\">https://rework.withgoogle.com/blog/five-keys-to-a-successful-google-team/</a></figcaption></figure><h4>Tid for å ta frem egne spørsmål</h4><p>Via Microsoft Teams og Confluence (<a href=\"https://miro.com/about/\">Miro</a> var under innføring og kom på plass like etter) jobbet vi frem våre egne spørsmål.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/646/1*K7TKnFqCfmG8_IHGTQOYjA.png\" /><figcaption>Resultat fra workshop</figcaption></figure><p>Det var mange gode diskusjoner underveis som f.eks. “Kan alle faggrupper i teamet svare på spørsmål om vi har redusert gjeld?” “Ja, det kan vi”. Både design, utvikling og test har gjeld de kan redusere. Og hva syntes vi om å svare på “Jeg har kunnet si hva jeg mener og blitt hørt?” Var vi trygge nok på hverandre til å svare oppriktig her? Ja, vi mente det.</p><h4>Gjennomføring av helsesjekk</h4><p>Spørsmålene ble lagt inn i Microsoft Forms slik at teamet kunne svare anonymt i forkant av selve gjennomgangen.</p><p>Frekvensen på helsesjekken ble annenhver uke for å få hyppig feedback nå som alle satt hjemme. Gjennomgangen av resultatene med teamet ble satt til 30 minutter. Spørsmålene som hadde snitt på tre eller lavere ble plukket ut for diskusjon. Vi forsterket også spørsmålene som hadde høyt snitt for å forstå hva vi gjorde bra og hvordan vi kunne gjøre mer av det. De få gangene tiden ble knapp under gjennomgangen, satte vi opp egne møter som f.eks. retrospektiv for videre diskusjon.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/948/1*ci76ejzQLQbhIsyefC58Lg.png\" /><figcaption>Helsesjekk med de nye spørsmålene — Svaralternativer Helt uenig=1, litt uenig=2, litt enig=3 og helt enig=4</figcaption></figure><h4>Møter</h4><p>Før pandemien hadde vi en del diskusjoner rundt arbeidsflyten. Diskusjonen fortsatte, men årsaken hadde endret seg. Utfordringen hadde gått fra tidvis visuell støy og vanskeligheter med å jobbe fokusert i kontorlandskapet til savn etter raske avklaringer ved pulten/kaffemaskinen og summingen i landskapet.</p><p>For å kompensere for dette savnet steg møteaktiviteten, som igjen førte til hyppigere fokusskifter og mindre effektiv arbeidsflyt. For å sikre mer tid til fokusert arbeid testet teamet ut å blokke tid i kalenderen slik som Vidar Moe skriver om i sin artikkel <a href=\"https://medium.com/sparebank1-digital/ikke-jobb-mens-jeg-forstyrrer-del-to-3b389d1cb71d\">Ikke jobb mens jeg forstyrrer</a>. Vi syns det hjalp, og sammen med god dialog mellom produkteier og teamet ble vi også enda flinkere på prioritering av oppgavene.</p><p>Et annet møte vi måtte se på var standupen. Med 18 personer på Teams ble standup i drøyeste laget og vi besluttet etter en helsesjekk å gå over til skriftlig standup på Slack. Teamet ble enig om å liste opp planene for dagen og eventuelle behov for hjelp. Og ikke minst, passe på å si hei nå som vi ikke så hverandre.</p><p>“Jeg har kunnet si hva jeg mener og blitt hørt?” hadde stort sett høy score. De gangene den gikk litt ned var årsaken for mange deltagere i et Teams-møte. Terskelen for å ta ordet var høyere nå enn når vi satt i samme møterom. Tiltaket ble å dele opp i mindre arbeidsgrupper som gjorde det tryggere å ta ordet. Vi prøvde også å alltid ha kamera på og bruke hånden eller chatten i Teams for å be om ordet eller gi små kommentarer.</p><p>Etter hvert endret vi frekvensen på helsesjekken fra annenhver uke til en gang i måneden, både for å ha færre møter, men også for å rekke og gjennomføre tiltakene vi satte oss fra gang til gang.</p><h4>Det sosiale</h4><p>Selv om møter ofte var tema på helsesjekken, var kanskje den største gjengangeren etter pandemien det sosiale. Vi savnet møtene ved kaffemaskinen, de tilfeldige møtene i gangene, det å spise lunsj sammen, kakefeiring og ikke minst noe så enkelt som å si “Hei, hvordan går det?”</p><p>Det var ikke like enkelt å få gjort noe med det sosiale når smittevernsreglene ble justert regelmessig. Når vi ikke kunne treffes fysisk prøvde vi å få til så mye som mulig digitalt. Kahoot ble innført fast hver fredag som en del av fredagens markering av hva vi hadde fått til gjennom uken. Kakefeiring på leveranser ble samlet opp med levering av noe godt på døren hjemme hos hver enkelt. Vi gjennomførte <a href=\"http://theteamcanvas.com/\">Team Canvas</a> som gjorde at vi ble bedre kjent med hverandre som team og enkeltpersoner. Alle tiltak hjalp, men de sosiale arenaene er og blir best når vi møtes fysisk.</p><p><strong>Som teamleder</strong> har det også vært viktig med hyppige 1–1 samtaler da helsesjekken ikke erstatter den viktige dialogen med hver enkelt. Vi har også hatt jevnlig retrospektiv for å få mer helhetlig innblikk i teamets tilstand.</p><p>Uten helsesjekken og verdien den gir hadde vi ikke kunne hatt like god innsikt i teamets helse, spesielt nå som alle sitter på hjemmekontor. Helsesjekken hjelper teamet til å finne hva som bør være fokus for kontinuerlig forbedring og videreutvikling slik at vi skal kunne bli enda Bedre sammen.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/960/1*qkJaDDkqnmgc3APTpTdNWA.png\" /><figcaption>SpareBank 1 Utviklings Verdiplattform</figcaption></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e4c6c511adb0\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/hvordan-har-teamet-det-n%C3%A5r-alle-er-p%C3%A5-hjemmekontor-e4c6c511adb0\">Hvordan har teamet det når alle er på hjemmekontor?</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Sissel Sveum"}},{"node":{"title":"Sayonara, Internet Explorer","link":"https://medium.com/sparebank1-digital/sayonara-internet-explorer-745cc5ac896f?source=rss----e3c741b0efee---4","content":{"encoded":"<p>Er det ikke kjipt når du har tatt på fullt turtøy og skal ut på en lang ferd mot en vakker horisont, bare til å merke at det er en stein i skoen?</p><p><strong>Du står da i et viktig veivalg:</strong></p><ul><li>Skal du bare dure på? Selv om det gjør vondt og går mye tregere, kan du potensielt nå målet ditt.</li><li>Skal du fjerne steinen? Det tar kanskje litt tid å ta av skoen, men turen blir mye morsommere og du kommer kjappere til mål.</li></ul><p>På nettsidene har vi fjernet vår stein; Internet Explorer (IE).</p><p>Alle som har jobbet med web de siste årene vet hvor ressurskrevende det er å tilpasse løsninger sånn at det fungerer greit på IE. Spesielt når man utvikler løsninger som pusher hva våre teknologiske muligheter er, tar det nesten like lang tid å få dette til å fungere på IE.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/900/1*dCpwWW_JMQRDtI0JpdeUlw.jpeg\" /><figcaption>Fokuset vårt vil være på mobil, ikke Internet Explorer.</figcaption></figure><h4><strong>Trygt valg</strong></h4><p>For <a href=\"https://www.sparebank1.no/nb/bank/privat.html\">sparebank1.no</a> er det et trygt valg å fjerne supportering av IE. Mobil blir bare mer og mer den foretrukne enheten for brukerne våre, og Chrome samt Safari er desidert de mest populære nettleserne. Etter dette kommer Edge og langt bak med stadig synkende trafikk: IE. Microsoft har selv sagt at de skal <a href=\"https://www.theverge.com/2020/8/17/21372487/microsoft-internet-explorer-11-support-end-365-legacy-edge\">slutte supportering av IE i 2021</a> og fokusere fullt på Edge.</p><p>Dette betyr ikke at nettsidene vil slutte fungere på IE. Det betyr bare at vi kommer til å prioritere andre oppgaver enn å fikse IE feil. Over tid vil det være mer og mer gunstig for brukeren å velge en annen nettleser. Vi står heller ikke alene om dette: Både <a href=\"http://finn.no\">finn.no</a>, <a href=\"http://nav.no\">nav.no</a> og <a href=\"http://spleis.no\">spleis.no</a> gir varsling hvis du bruker Internet Explorer.</p><h4>Problemet er bedrifter som har IE som standard nettleser</h4><p>For de som får en Windows PC fra jobb og booter denne opp er det en <em>stor sannsynlighet</em> at default nettleser er Internet Explorer. <strong>Dette er problemet</strong>.</p><p>Jeg antar at en stor andel av brukere ikke egentlig bryr seg om hvilken nettleser de bruker. Den nettleseren som er mest tilgjengelig er den de bruker, og normalen blir at nettsider kan oppføre seg litt rart eller at man får flere og flere varslinger.</p><p>Når selv <a href=\"https://www.microsoft.com/nb-no/microsoft-365/windows/end-of-ie-support\">Microsoft har gått ut med at Internet Explorer kan være en risiko for sikkerhet</a>, regler og universelle standarder, kan det ikke være opp til den individuelle ansatte å gjøre et skippertak mot bedriftens anbefalinger ved å bytte nettleser. Bedriften må sette en bedre standard med å tilrettelegge en nettleser som faktisk er supportert og fungerer.</p><p>Uansett, for å bruke et av Japans mest misforståtte ord:</p><p><a href=\"https://www.urbandictionary.com/define.php?term=Sayonara\">Sayonara</a>, Internet Explorer.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=745cc5ac896f\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/sayonara-internet-explorer-745cc5ac896f\">Sayonara, Internet Explorer</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Lasse Olsen"}},{"node":{"title":"Playwright vs Cypress","link":"https://medium.com/sparebank1-digital/playwright-vs-cypress-1e127d9157bd?source=rss----e3c741b0efee---4","content":{"encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NjQboT840TikscTpM52iQg.jpeg\" /></figure><p>Not too long ago, Cypress seemed to be the most exciting new end-to-end testing framework out there, quickly growing in popularity within different development teams. However now there’s a new kid on the block named Playwright, and it aims to solve a similar issue — helping developers automate their user-flows in a more user-friendly way.</p><p>This article will compare the two, and hopefully make it clearer which testing framework suits your needs the most, by making you aware of their similarities, differences, strengths and weaknesses.</p><h3>About the frameworks</h3><p>For an introduction to the fundamentals of Cypress.io, check out my other article named <a href=\"https://developer.bring.com/blog/testing-with-cypress/\">“Testing with Cypress”</a>. In short, Cypress is a tool for setting up, writing, running and debugging tests. It compiles all the tests into Javascript, runs in an instance of a chromium-based browser that includes Chrome, Edge, Brave and Electron. Cypress also just recently added full-support for Firefox browsers.</p><p>Playwright is essentially a browser automation tool and the processor of the node library Puppeteer, as it has the same functionality along with several improvements such as Cross-browser testing and device emulations. Playwright is also written and maintained by the same people who created Puppeteer, and are now working at Microsoft. This article won’t cover Puppeteer, but it’s handy to know of its similarities, especially if you’re already familiar with it.</p><h3>Similarities</h3><p>Similarly to Cypress, Playwright is an open-source, Javascript-based library, for automating your end-to-end tests. Both aim to provide a single API that developers and testers can use to interact with web applications across the major browser engines. There is a difference between the two when it comes to browser support, but both offer the ability to run tests and interactions in Firefox and Chromium browsers. Other similarities include functionality, like taking screenshots, stubbing requests, and testing on various screen sizes. If you want to run your tests as part of your continuous integration flow, or prefer to run the tests without a UI interface, then you’ll be happy to hear both offer headless options so that you can run your tests directly in the Terminal.</p><p><strong>To summarize:</strong></p><ul><li>Both are Open-source and Javascript-based</li><li>Can install both as an npm-package.</li><li>Single API for testing in several browsers (Both support Firefox and Chromium)</li><li>Share a lot of the same functionality, like screenshots, stubbing and setting custom view-ports.</li><li>Neither supports testing in IE11</li><li>Can be run from the Terminal</li><li>Frequently updated GitHub Repos</li></ul><h3>Differences</h3><p>While they both aim to solve a similar issue, they have different ways of doing so. Cypress is more of a “full-package”, and it creates a folder structure along with example files, and you are stuck with the test runner you get with the framework. Playwright, on the other hand, does not make any files and can be configured to work with the test runner of your choice. The two frameworks also run their tests differently. Cypress runs the tests in run-time, and Playwright is promise-based and can run several different browsers and different user contexts in the same test, while Cypress needs to be re-run with the other browser options.</p><p>Cypress has gone for a syntax more similar to JQuery, but instead of “$”, it uses the keyword “cy”, and a function name. Having one keyword to access everything, might make more sense for designers and junior front-end developers, less familiar with async and creating instances of objects, than the more Javascript approach Playwright has. The example below shows the syntax differences between the two frameworks, and the test scenario is to check if an element with the class name “App-logo” exists.</p><pre>// Cypress</pre><pre>describe(‘Navigation and Element test’, () =&gt; {<br>it(‘Finds the react logo’, () =&gt; {</pre><pre>cy.visit(‘&lt;http://localhost:3000&gt;&#39;);<br>cy.get(‘.App-logo’).should(“exist”);</pre><pre>})<br>})</pre><pre>// Playwright</pre><pre>import * as playwright from ‘playwright’;<br>const browsertype = playwright.chromium;</pre><pre>(async () =&gt; {<br>const browser = await browsertype.launch();<br>const page = await browser.newPage();</pre><pre>await page.goto(‘&lt;http://localhost:3000/&gt;&#39;);<br>const logo = await page.$(‘.App-logo’)<br>if(!logo) throw new Error(“Cannot find logo”)<br>await browser.close(); // Close browser again</pre><pre>})();</pre><p>As previously mentioned Playwright has a syntax closer to Javascript, where you create instances of objects. The ability to create object instances allows us to run multiple tabs, browsers and user contexts at the same time. The example above shows how Playwright uses the async functionality to wait for a UI-element to appear before continuing the test, Cypress, however, solves a similar issue by automatically re-trying the assertions until it reaches the set timeout.</p><p>One of the most significant benefits of Playwright is its ability to test across multiple pages and domains. Along with setting multiple user contexts. Both are very useful if you’re using third-party sign-ins, pop-ups, iframes (such as BankID in Norway) etc. in your application. Cypress, on the other hand, would require you to write separate tests to simulate the different user scenarios and would require you to stub a lot of the requests to work.</p><p><strong>To summarize:</strong></p><ul><li>Playwright works on Webkit-browsers, Cypress does not.</li><li>You can choose test-runner in Playwright</li><li>Playwright lets you test in several browsers at the same time.</li><li>Playwright supports multi-tabs and frames.</li><li>Cypress doesn’t run in headless mode by default, Playwright does.</li><li>Playwright awaits UI-elements before running interactions, Cypress re-try assertions until timeout.</li></ul><h3>Size and performance</h3><p>When it comes to size and performance, it’s a bit of a mixed bag. Since Cypress has a built-in test runner, Jest has been added to the comparison, as it’s the most popular Javascript test runner, and needed to achieve similar functionality to Cypress in Playwright. Looking at the minified size, Cypress is technically smaller with it’s 1.6MB against the 2.85MB of Playwright + Jest, but where Playwright + Jest shine is when you look at the dependencies where Playwright + Jest has 14, compared to the 125(!) of Cypress.</p><p>To test performance, a colleague and I wrote a test in both Playwright + Jest and Cypress. The test scenario covers the following steps:</p><ol><li>Go to sparebank1.no</li><li>Press “Godta alle” button for the cookie pop-up</li><li>Find postal code input and enter 3324</li><li>Check if a button with the class “ffe-shortcut-button” and text “SpareBank 1 Modum” is visible.</li><li>Click the button, and check if the page now is Sparebank 1 Modum.</li></ol><p>The results show that it’s only milliseconds separating the two in terms of speed. Cypress ran the test in 3 seconds, whilst Playwright slightly beat that by completing the test in 2.33 seconds. Essentially it means that both run the test fast, and whilst Playwright was somewhat quicker, it’s not that big of a difference that it should affect your choice of framework.</p><h3>What to pick?</h3><p>So which of these frameworks should you choose? The answer is it depends on how experienced you are with testing, and what functionality you find essential. If you’re new to testing and want a more plug-and-play approach that includes everything you need to get started, then Cypress is the best choice for you. It has good documentation and a broader community that makes it easier to get help and find answers to specific scenarios you find challenging.</p><p>If you are more familiar with testing, need to test Webkit browsers or your tests need to cover scenarios spanning across multiple pages and domains, then Playwright is the choice for you. Playwright is also the right choice for you if you have fallen in love with a specific test runner or don’t need one at all. With the framework being reasonably new, we can also expect that the community, documentation and framework in general will continue to improve over time.</p><p><strong>Cypress:</strong></p><p>➕ Easy to understand documentation<br>➕ A broader community and easier to find answers about specific issues<br>➕ Easier to understand for people new to testing<br>➕ You only have to read up on one framework as Cypress has everything included.</p><p>➖ Doesn’t support multi-page and third-party implementations.<br>➖ More extensive and with more dependencies<br>➖ Generates several example files and folders<br>➖ You have to re-run tests to run in another browser.</p><p><strong>Playwright:</strong></p><p>➕ Broader browser support<br>➕ Fewer dependencies than Cypress<br>➕ Supports multi-page and third-party implementations<br>➕ Lets you choose your test runner.<br>➕ Doesn’t generate any files.<br>➕ You can run multiple browsers using the same test.</p><p>➖ Documentation not as good<br>➖ Newer and with a smaller community</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1e127d9157bd\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/playwright-vs-cypress-1e127d9157bd\">Playwright vs Cypress</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"HeleneKassandra"}},{"node":{"title":"Det skal være lett å gjøre rett — del 3","link":"https://medium.com/sparebank1-digital/det-skal-v%C3%A6re-lett-%C3%A5-gj%C3%B8re-rett-del-3-eddc2e24623?source=rss----e3c741b0efee---4","content":{"encoded":"<h3>Det skal være lett å gjøre rett — del 3</h3><p>I forrige artikkel i serien så vi på noen av verktøyene vi bruker til utvikling. Nå skal vi se mer på noe som er minst like viktig, nemlig å få koden ut i produksjon.</p><p>Som vi vet fra blant annet <a href=\"https://www.oreilly.com/library/view/accelerate/9781457191435/\">Accelerate</a> er en av tingene som skiller organisasjoner med høy og lav ytelse er hvor ofte kode rulles ut til produksjon. Hyppige produksjonssettinger fører til færre produksjonsfeil, kortere mean time to recovery (Tiden det tar fra en feil oppstår til den er fikset) og kortere ledetid fra commit til prodsetting.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/250/1*oTBf3kthXvnwdpuCgwFMaA.jpeg\" /></figure><p>Men det er ikke nok å rulle ut kode til produksjon ofte, det må gjøres på en forutsigbar og trygg måte. Det må kunne gjøres med lave skuldre. Og som de fleste som har vært med på kvartalsvise eller halvårsreleaser som gjøres manuelt kan si: Det å prodsette sjeldent gjør veldig vondt.</p><p>Det finnes mange artikler som sier noe om hvorfor store releaser gjør vondt, men i bunn og grunn handler det om at dersom du prodsetter mange endringer samtidig, så er sannsynligheten for at det er feil i en av de stor. Og da må hele leveransen rulles tilbake, prosjektledere og interessenter må informeres og du må jobbe overtid for å fikse det. Så må ny produksjonssetting planlegges og driftsressurser må bookes på nytt. Kanskje det til og med blir nattarbeid.</p><p>Dersom endringssettet du prodsetter er mindre, så er det også mindre som må rulles tilbake, og konsekvensen blir lavere. I tillegg så blir mulighetsrommet for feil lavere. Det er færre endringer, og dermed færre mulige syndere som må sjekkes ut.</p><p><strong>Applikasjonsarkitektur og verktøy spiller sammen</strong></p><p>Hvis du skal kunne levere kode hyppig, må du også ha en applikasjonsarkitektur som støtter opp under dette. Det finnes flere måter å angripe problemstillingen på, men det vanligste i dag er å dele opp i mindre tilstandsløse applikasjoner som tilsammen utgjør et system.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q8FHRS4YMobF8_aqdAQgFQ.png\" /></figure><p>Vi har valgt å basere våre containerbaserte applikasjoner på manifestet <a href=\"https://12factor.net/\">The Twelve-Factor App</a>. Det er et manifest som er skrevet av folkene bak tjenesten Heroku. Manifestet beskriver 12 egenskaper de mener at moderne applikasjoner bør ha. Dette setter en del krav til applikasjonene vi deployer:</p><p>Applikasjonene må være tilstandsløse. Det gjør at applikasjonene er lettere å forvalte og forstå, de blir enklere å skalere horisontalt og det gjør at de passer bedre inn i en verden hvor de kan bli revet ned og startet opp i løpet av sekunder.</p><p>Hemmeligheter, som er typisk api-nøkler, sertifikater og passord, injiseres fra miljøet rundt. Vi har i tillegg valgt å gjøre løsningen for å legge inn hemmeligheter i en app selvbetjent, slik at om du er en DBA som har generert en databasebruker, legger du den selv inn i applikasjonen som skal ha hemmeligheten. Dermed slipper vi å sende hemmeligheter rundt på mer eller mindre kreative måter som sms, epost eller post-it lapper.</p><p><strong>Deployment</strong></p><p>Vi har opp gjennom årene hatt flere verktøy for deployment. Felles for disse er at de som regel har løst et spesifikt problem i et spesifikt miljø. Da vi skulle ha et verktøy til containerplattformen vår, ville vi ha et verktøy som kunne løse deployment i alle miljøer. Vi valgte til slutt å lage vårt eget deploymentverktøy, som var tilpasset våre prosesser og vårt miljø.</p><p>Resultatet ble Shifter! Som noen sikkert vet er Shifter <a href=\"https://medium.com/sparebank1-digital/det-skal-v%C3%A6re-lett-%C3%A5-gj%C3%B8re-rett-del-2-41ac9949c274\">også en karakter fra Byggmester Bob</a>, og han er ganske god på å flytte rundt på containere.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uIahASmYN44xXsMUNp9Chw.png\" /><figcaption>Kilde: <a href=\"https://www.amazon.sg/Fisher-Price-Bob-Builder-Shifter-Vehicle/dp/B06XPYCSHV\">https://www.amazon.sg/Fisher-Price-Bob-Builder-Shifter-Vehicle/dp/B06XPYCSHV</a></figcaption></figure><p>Litt av grunnen til at vi valgte å utvikle vårt eget deployment-verktøy var fordi vi ville tilpasse det til våre behov og våre verktøy. Blant annet så ønsket vi å kunne vise relevante metrics fra applikasjonen direkte i grensesnittet, slik at man enkelt kan følge med på hva som skjer når man prodsetter en endring.</p><p>Her har du relevante metrikker for responstid, feilrater og ressursbruk.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*X-oplbVU3457mBoyuajfwQ.png\" /></figure><p>I tillegg til det grafiske grensesnittet har Shifter et restbasert API som kan benyttes fra jenkins og andre script for å bygge og deploye applikasjoner. Derfor har shifter blitt en viktig del av både utvikling og produksjonsetting hos oss, som hjelper oss å sove godt om natten.</p><p>I del fire av denne serien skal vi skrive litt om hvordan vi organiserer oss for å kunne jobbe godt med kontinuerlig forbedring av verktøyene våre.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=eddc2e24623\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/sparebank1-digital/det-skal-v%C3%A6re-lett-%C3%A5-gj%C3%B8re-rett-del-3-eddc2e24623\">Det skal være lett å gjøre rett — del 3</a> was originally published in <a href=\"https://medium.com/sparebank1-digital\">SpareBank 1 Utvikling</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},"creator":"Ola Hast"}}]}}}